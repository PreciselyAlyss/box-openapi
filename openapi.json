{
  "openapi": "3.0.2",
  "info": {
    "title": "Box Platform 2.0 APIs",
    "description": "The Box Content API gives you access to secure content management and content experience features for use in your own app. It strives to be RESTful and is organized around the main resources you’re familiar with from the Box web interface.",
    "termsOfService": "https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9",
    "contact": {
      "name": "Box Developer Relations",
      "url": "https://developer.box.com",
      "email": "devrel@box.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api.box.com/2.0",
      "description": "Box Platform API server"
    }
  ],
  "paths": {
    "/authorize": {
      "get": {
        "operationId": "get_authorize",
        "summary": "Authorize a user",
        "description": "Authorize a user by sending them through the [Box](https://box.com)\nwebsite and request their permission to act on their behalf.\n\nThis is the first step when authenticating a user using\nOAuth 2.0. To request a user's authorization to use the Box APIs\non their behalf you will need to send a user to the URL with this\nformat.",
        "tags": [
          "Authorization"
        ],
        "x-box-reference-category": "authorization",
        "security": [],
        "servers": [
          {
            "url": "https://account.box.com/api/oauth2",
            "description": "Server for client-side authentication"
          }
        ],
        "parameters": [
          {
            "name": "response_type",
            "description": "The string value `\"code\"` is the only current value we support\nfor the OAuth2 grant type.",
            "in": "query",
            "example": "5idyGSFuf54zrvKm",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "code"
              ]
            }
          },
          {
            "name": "client_id",
            "description": "The Client ID of the application that is requesting to authenticate\nthe user. To get the Client ID for your application, log in to your\nBox developer console and click the **Edit Application** link for\nthe application you're working with. In the OAuth2 Parameters section\nof the configuration page, find the item labeled **client_id**. The\ntext of that item is your application's Client ID.",
            "in": "query",
            "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "description": "The URL to which Box redirects the browser after the user has granted\nor rejected the application permission. This URL must match the\nredirect URL in the configuration of your application. It must be a\nvalid HTTPS URL and it needs to be able to handle the redirection to\ncomplete the next step in the OAuth2 flow.",
            "in": "query",
            "example": "http://example.com/auth/callback",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "A custom string of your choice. Box will pass the same string to\nthe redirect URL when authentication is complete. This parameter\ncan be used to identify a user on redirect, as well as protect\nagainst hijacked sessions and other attacks.",
            "in": "query",
            "example": "my_state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "A comma-separated list of application scopes you'd like to\nauthenticate the user for. This defaults to all the scopes configured\nfor the application in its configuration page.",
            "in": "query",
            "example": "admin_readwrite",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Does not return any data, but rather should be used in the browser.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "html"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "operationId": "post_oauth2_token",
        "summary": "Request an Access Token",
        "description": "Request an Access Token using either a client-side obtained OAuth2\nauthorization code or a server-side JWT assertion.\n\nAn Access Token is a string that enables Box to verify that a\nrequest belongs to an authorized session. In the normal order of\noperations you will begin by requesting authentication from the\n[authorize](#get-authorize) endpoint and Box will send you an\nauthorization code.\n\nYou will then send this code to this endpoint to exchange it for\nan Access Token. The returned Access Token can then be used to to make\nBox API calls.",
        "tags": [
          "Authorization"
        ],
        "x-box-reference-category": "authorization",
        "security": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "400": {
            "description": "A generic authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2Error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/revoke": {
      "post": {
        "operationId": "post_oauth2_revoke",
        "summary": "Revoke an Access Token",
        "description": "Revoke an active Access Token, effectively logging a user out\nthat has been previously authenticated.",
        "tags": [
          "Authorization"
        ],
        "x-box-reference-category": "authorization",
        "security": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRevocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty response when the token was successfully revoked."
          },
          "400": {
            "description": "An OAuth2 error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2Error"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}": {
      "get": {
        "operationId": "get_files_id",
        "summary": "Get file information",
        "tags": [
          "Files"
        ],
        "x-box-reference-category": "files",
        "description": "Retrieves the details about a file.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file object.\n\n[Some fields are optional](#file) and need to be explicitly\nrequested using the [fields](#get-files-id--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_files_id",
        "summary": "Update a file",
        "tags": [
          "Files"
        ],
        "x-box-reference-category": "files",
        "description": "Updates a file. This can be used to rename or move a file,\ncreate a shared link, or lock a file.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the file",
                    "example": "NewFile.txt"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description for a file",
                    "maxLength": 256,
                    "example": "Amazing Photo"
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder for this file. Use this to move the file\nor to restore it out of the trash."
                      }
                    ]
                  },
                  "shared_link": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/SharedLink--Writable"
                      },
                      {
                        "description": "Enables the creation of a shared link for this file"
                      }
                    ]
                  },
                  "lock": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Lock--Writable"
                      },
                      {
                        "description": "Creates a lock on a file. Set to `null` to unlock a file"
                      }
                    ]
                  },
                  "permissions": {
                    "description": "Whether the shared link allows downloads",
                    "type": "object",
                    "properties": {
                      "can_download": {
                        "description": "Who is allowed to download this file",
                        "type": "string",
                        "example": "open",
                        "enum": [
                          "open",
                          "company"
                        ]
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "example": [
                      "approved"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "description": "The tags for this item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update them using this field."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a file object.\n\n[Some fields are optional](#file) and need to be explicitly\nrequested using the [fields](#get-files-id--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "default": {
            "description": "A client error can occur of the user does not have access to the file,\nthe file does not exists, or incorrect parameters are passed in the\nrequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_files_id",
        "summary": "Delete a file",
        "tags": [
          "Files"
        ],
        "x-box-reference-category": "files",
        "description": "Deletes a file, either permanently or by moving it to\nthe trash.\n\nThe the enterprise settings determine whether the item will\nbe permanently deleted from Box or moved to the trash.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file has been successfully\ndeleted."
          },
          "412": {
            "description": "If the `If-Match` header was sent and the file has since changed, the\nAPI will return a `412 Precondition Failed` error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic file error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/content": {
      "get": {
        "operationId": "get_files_id_content",
        "summary": "Download a file",
        "tags": [
          "Files"
        ],
        "x-box-reference-category": "files",
        "description": "Returns the contents of a file in binary format.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Range",
            "description": "The byte range of the content to download.\n\nThe format `{start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
            "example": "0-1024",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BoxApi",
            "description": "The URL and password for a file that has\nbeen shared using a shared link, as this file would otherwise\nnot be accessible to the user.\n\nUse the format `shared_link=SHARED_LINK_URL` or if a password was set\nuse `shared_link=[link]&shared_link_password=[password]`",
            "example": "shared_link=[link]",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "description": "The file version to download",
            "example": 4,
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "If the file is not ready to be downloaded yet `Retry-After` header will\nbe returned indicating the time in seconds after which the file will\nbe available for the client to download.\n\nThis response can occur when the file was uploaded immediately before the\ndownload request.",
            "headers": {
              "Retry-After": {
                "description": "The time in seconds after which to retry the download",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "302": {
            "description": "If the file is available to be downloaded the response will include a\n`Location` header for the file on `dl.boxcloud.com`.\n\nThe `dl.boxcloud.com` URL is not persistent and clients will need\nto follow the redirect in order to actually download the file.",
            "headers": {
              "Location": {
                "description": "A pointer to the download URL",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          }
        }
      }
    },
    "/files/content": {
      "options": {
        "operationId": "options_files_content",
        "summary": "Preflight check",
        "tags": [
          "Files"
        ],
        "x-box-reference-category": "files",
        "description": "Performs a check to verify that a file will be accepted by Box\nbefore you upload the entire file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name for the file",
                    "example": "File.mp4"
                  },
                  "size": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The size of the file in bytes",
                    "example": 1024
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder to upload the file to"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If the check passed, the response will include a session URL that\ncan be used to upload the file to.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUrl"
                }
              }
            }
          },
          "409": {
            "description": "If the check did not pass, the response will include some details on\nwhy it did not pass.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          },
          "default": {
            "description": "A generic client error can occur when incorrect file\npermissions were passed in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/copy": {
      "post": {
        "operationId": "post_files_id_copy",
        "summary": "Copy a file",
        "description": "Creates a copy of a file.",
        "tags": [
          "Files"
        ],
        "x-box-reference-category": "files",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "parent"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "An optional different name for the new file.\n\nNames can only contain basic, printable\nASCII characters, without any slashes or\ntrailing spaces.\n\nBot `.` and `..` are protected names.",
                    "example": "FileCopy.txt",
                    "maxLength": 255
                  },
                  "version": {
                    "type": "string",
                    "description": "An optional ID of the specific file version you want to copy",
                    "example": "0"
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new file object representing the copied file.\n\n[Some fields are optional](#file) and need to be explicitly\nrequested using the [fields](#post-files-id-copy--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/thumbnail.{extension}": {
      "get": {
        "operationId": "get_files_id_thumbnail_id",
        "summary": "Get a file thumbnail",
        "description": "Retrieves a thumbnail, or smaller image representation, of a file.\n\nSizes of `32x32`,`64x64`, `128x128`, and `256x256` can be returned in\nthe `.png` format and sizes of `32x32`, `94x94`, `160x160`, and `320x320`\ncan be returned in the `.jpg` format.\n\nThumbnails can be generated for the image and video file formats listed\n[found on our community site](http://community.box.com/t5/Managing-\\\nYour-Content/What-file-types-are-supported-by-Box-s-Content-Preview/\\\nta-p/327).",
        "tags": [
          "Files",
          "Thumbnails"
        ],
        "x-box-reference-category": "files",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension",
            "description": "The file format for the thumbnail",
            "in": "path",
            "required": true,
            "example": "png",
            "schema": {
              "type": "string",
              "enum": [
                "png",
                "jpg"
              ]
            }
          },
          {
            "name": "min_height",
            "description": "The minimum height of the thumbnail",
            "in": "query",
            "example": 32,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "min_width",
            "description": "The minimum width of the thumbnail",
            "in": "query",
            "example": 32,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "max_height",
            "description": "The maximum height of the thumbnail",
            "in": "query",
            "required": false,
            "example": 32,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "max_width",
            "description": "The maximum width of the thumbnail",
            "in": "query",
            "required": false,
            "example": 32,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "When a thumbnail can be created the thumbnail data will be\nreturned in the body of the response.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "The thumbnail"
                }
              },
              "image/jpg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "The thumbnail"
                }
              }
            }
          },
          "202": {
            "description": "If the thumbnail is not available yet, a `Location` header\npointing to a placeholder graphic will be returned.",
            "headers": {
              "Retry-After": {
                "description": "The time in seconds after which the thumbnail will be available.\n\nYour application  only attempt to get the thumbnail again after\nthis time.",
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "Location": {
                "description": "A pointer to a placeholder graphic that can be used until the\nthumbnail has been generated.",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          },
          "302": {
            "description": "If Box is unable to generate a thumbnail for this file type, a `Location`\nheader pointing to a placeholder graphic for this file type will be\nreturned.",
            "headers": {
              "Location": {
                "description": "A pointer to a placeholder graphic that can be used for this\nfile type.",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          },
          "404": {
            "description": "If Box is unable to generate a thumbnail for this particular file, `404`\nwill be returned with a code of `preview_cannot_be_generated`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/collaborations": {
      "get": {
        "operationId": "get_files_id_collaborations",
        "summary": "Get file collaborations",
        "description": "Retrieves a list of collaborations for a file. This\nreturns all the users that have access to the file.",
        "tags": [
          "Collaborations",
          "Files"
        ],
        "x-box-reference-category": "collaborations",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of collaboration objects. If there are no\ncollaborations on this file an empty collection will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborations"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/comments": {
      "get": {
        "operationId": "get_files_id_comments",
        "summary": "Get file comments",
        "description": "Retrieves a list of comments for a file.",
        "tags": [
          "Comments",
          "Files"
        ],
        "x-box-reference-category": "comments",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of comment objects. If there are no\ncomments on this file an empty collection will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/tasks": {
      "get": {
        "operationId": "get_files_id_tasks",
        "summary": "Get file tasks",
        "description": "Retrieves a list of all the tasks for a file. This\nendpoint does not support paging.",
        "tags": [
          "Tasks",
          "Files"
        ],
        "x-box-reference-category": "tasks",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of task objects. If there are no\ntasks on this file an empty collection will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tasks"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/trash": {
      "get": {
        "operationId": "get_files_id_trash",
        "summary": "Get a trashed file",
        "tags": [
          "Files",
          "Trash"
        ],
        "x-box-reference-category": "trash",
        "description": "Retrieves a file that has been moved to the trash.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the file that was trashed,\nincluding information about when the it\nwas moved to the trash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the file is not in the trash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_files_id_trash",
        "summary": "Permanently delete file",
        "tags": [
          "Files",
          "Trash"
        ],
        "x-box-reference-category": "files",
        "description": "Permanently deletes a file in the trash. The item will no longer\nexist in Box. This action cannot be undone.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "An empty `204 No Content` response will be returned upon successful\ndeletion."
          },
          "default": {
            "description": "Generic file error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/versions": {
      "get": {
        "operationId": "get_files_id_versions",
        "summary": "Get all file versions",
        "tags": [
          "Files",
          "File Versions"
        ],
        "x-box-reference-category": "file_versions",
        "description": "Retrieve information on all version of a file. This endpoint can be used to\nretrieve information about older versions of a file.\n\nVersions are only tracked for Box users with premium accounts.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of file versions.\n\nIf there are no previous versions of this file an empty\narray will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVersions"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/versions/{file_version_id}": {
      "get": {
        "operationId": "get_files_id_versions_id",
        "summary": "Get a file version",
        "tags": [
          "Files",
          "File Versions"
        ],
        "x-box-reference-category": "file_versions",
        "description": "Retrieve a specific older version of a file.\n\nVersions are only tracked for Box users with premium accounts.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_version_id",
            "description": "The ID of the file version",
            "in": "path",
            "required": true,
            "example": "1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file object.\n\n[Some fields are optional](#file) and need to be explicitly\nrequested using the [fields](#get-files-id-versions--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_files_id_versions_id",
        "summary": "Delete a file version",
        "tags": [
          "Files",
          "File Versions"
        ],
        "x-box-reference-category": "file_versions",
        "description": "Move a file version to the trash.\n\nVersions are only tracked for Box users with premium accounts.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_version_id",
            "description": "The ID of the file version",
            "in": "path",
            "required": true,
            "example": "1234",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file has been successfully\ndeleted."
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/versions/current": {
      "post": {
        "operationId": "post_files_id_versions_current",
        "summary": "Revert to file version",
        "tags": [
          "Files",
          "File Versions"
        ],
        "x-box-reference-category": "file_versions",
        "description": "Revert to a previous version of a file.\n\n\nIf previous versions exist, this method can be used to\npromote one of the older versions to the top of the version history.\n\nThis actually creates a new copy of the old version and puts it at the\ntop of the versions history. The file will have the exact same contents\nas the older version, with the the same SHA1/etag, and the same name\nas the original.\n\nOther properties such as comments do not get updated to their\nformer values.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The file version to revert to",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The file version ID",
                    "example": "11446498"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type to revert to",
                    "example": "file",
                    "enum": [
                      "file_version"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a newly created file version object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVersion"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/metadata": {
      "get": {
        "operationId": "get_files_id_metadata",
        "summary": "Get all file metadata",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Retrieves all metadata for a given file.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all the metadata associated with a file.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadatas"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/metadata/{scope}/{template_key}": {
      "get": {
        "operationId": "get_files_id_metadata_id_id",
        "summary": "Get a specific file metadata",
        "tags": [
          "Files & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Retrieve a specific metadata template instance for a file",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "An instance of the metadata template that includes\nadditional `key:value` pairs defined by the user or\nan application.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the metadata template specified\nwas not applied to this file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_files_id_metadata_id_id",
        "summary": "Create metadata on file",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Creates a piece of metadata on a file based on the specified template.\n\nOnly values that are present in the metadata template\nwill be accepted.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "example_key": "Example Value"
                },
                "additionalProperties": {
                  "type": "string",
                  "example": "Example Value"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an instance of the template that was specified, with the\ncustom template data included.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "409": {
            "description": "If the piece of metadata already exists, a conflict error\nwill be returned. The metadata can then instead be updated with the\n`put` method.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_files_id_metadata_id_id",
        "summary": "Update metadata on file",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Updates a piece of metadata on a file.\n\nThe metadata instance can only be updated if the instance\nalready exists. When editing metadata, only values that adhere to the\nmetadata template schema will be accepted.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata instance remains unchanged.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata.\nThe changes are represented as a JSON array of\noperation objects.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetadataPatchItem"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated metadata template instance, with the\ncustom template data included.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "409": {
            "description": "If the piece of metadata already exists, a conflict error\nwill be returned. The metadata can then instead be updated with the\n`put` method.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_files_id_metadata_id_id",
        "summary": "Delete metadata on file",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Deletes a piece of file metadata.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the metadata is\nsuccessfully deleted."
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folder_id}": {
      "get": {
        "operationId": "get_folders_id",
        "summary": "Get folder information",
        "tags": [
          "Folders"
        ],
        "x-box-reference-category": "folders",
        "description": "Retrieves the details about a folder, including the first 100 entries\nin the folder.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a folder object, including the first 100 entries in the folder.\n\n[Some fields are optional](#folder) and need to be explicitly\nrequested using the [fields](#get-folders-id--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "default": {
            "description": "A client error can occur of the user does not have access to the folder,\nthe folder does not exists, or incorrect parameters are passed in the\nrequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_folders_id",
        "summary": "Update a folder",
        "description": "Updates a folder. This can be also be used to move the folder,\ncreate shared links, update collaborations, and more.",
        "tags": [
          "Folders"
        ],
        "x-box-reference-category": "folders",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the folder",
                    "example": "New Folder"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the folder",
                    "maxLength": 256,
                    "example": "Some pictures I took"
                  },
                  "sync_state": {
                    "type": "string",
                    "example": "synced",
                    "description": "If Box Sync or Box Drive is allowed to sync this folder.",
                    "enum": [
                      "synced",
                      "not_synced"
                    ]
                  },
                  "can_non_owners_invite": {
                    "type": "boolean",
                    "example": true,
                    "description": "If collaborators who are not\nfolder owners can invite new collaborators"
                  },
                  "is_collaboration_restricted_to_enterprise": {
                    "type": "boolean",
                    "example": true,
                    "description": "If future invites to this folder are restricted to users\nwithin the enterprise. This does not affect existing\ncollaborations."
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder for this folder. Use this to move the folder\nor to restore it out of the trash."
                      }
                    ]
                  },
                  "shared_link": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/SharedLink--Writable"
                      },
                      {
                        "description": "Enables the creation of a shared link for this folder"
                      }
                    ]
                  },
                  "folder_upload_email": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/FolderUploadEmail"
                      },
                      {
                        "description": "Enables an email address for users to upload\nfiles directly to the folder"
                      }
                    ]
                  },
                  "owned_by": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Owner"
                      },
                      {
                        "description": "The user that owns this folder"
                      }
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "example": [
                      "approved"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "description": "The tags for this item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update them using this field."
                  },
                  "collections": {
                    "type": "array",
                    "description": "The collections this folder belongs to.",
                    "items": {
                      "$ref": "#/components/schemas/Parent"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a folder object for the updated folder\n\n[Some fields are optional](#folder) and need to be explicitly\nrequested using the [fields](#put-folders-id--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_folders_id",
        "summary": "Delete a folder",
        "description": "Deletes a folder, either permanently or by moving it to\nthe trash.\n\nThe the enterprise settings determine whether the item will\nbe permanently deleted from Box or moved to the trash.",
        "tags": [
          "Folders"
        ],
        "x-box-reference-category": "folders",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recursive",
            "description": "Delete a folder that is not empty by recursively deleting the\nfolder and all of its content.",
            "in": "query",
            "required": false,
            "example": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the folder is successfully deleted\nor moved to the trash."
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folder_id}/items": {
      "get": {
        "operationId": "get_folders_id_items",
        "summary": "Get folder items",
        "tags": [
          "Folders",
          "Files"
        ],
        "x-box-reference-category": "folders",
        "description": "Retrieves a page of files, folders, web links, and other items contained\nwithin the specified folder.\n\nTo request more information about the folder, use the\n[Retrieve a folder](#get-folders-id-items) endpoint.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of items contained in the folder.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders": {
      "post": {
        "operationId": "post_folders",
        "summary": "Create a folder",
        "tags": [
          "Folders"
        ],
        "x-box-reference-category": "folders",
        "description": "Creates a new empty folder within the specified parent folder.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name for the new folder",
                    "example": "New Folder"
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a folder object.\n\n[Some fields are optional](#folder) and need to be explicitly\nrequested using the [fields](#post-folders--request--fields) parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "default": {
            "description": "Client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folder_id}/copy": {
      "post": {
        "operationId": "post_folders_id_copy",
        "summary": "Copy a folder",
        "description": "Creates a copy of a folder in another folder. The original folder will\nnot be changed.",
        "tags": [
          "Folders"
        ],
        "x-box-reference-category": "folders",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "parent"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "An optional different name for the new folder",
                    "example": "New Folder"
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new folder object representing the copied folder.\n\n[Some fields are optional](#folder) and need to be explicitly\nrequested using the [fields](#post-folders-id-copy--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folder_id}/collaborations": {
      "get": {
        "operationId": "get_folders_id_collaborations",
        "summary": "Get folder collaborations",
        "description": "Retrieves a list of collaborations for a folder. This\nreturns all the users that have access to the folder.",
        "tags": [
          "Collaborations",
          "Folders"
        ],
        "x-box-reference-category": "collaborations",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of collaboration objects. If there are no\ncollaborations on this folder an empty collection will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborations"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folder_id}/trash": {
      "get": {
        "operationId": "get_folders_id_trash",
        "summary": "Get a trashed folder",
        "tags": [
          "Folders",
          "Trash"
        ],
        "x-box-reference-category": "trash",
        "description": "Retrieves a folder that has been moved to the trash.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the folder that was trashed,\nincluding information about when the it\nwas moved to the trash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the folder is not in the trash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_folders_id_trash",
        "summary": "Permanently delete folder",
        "tags": [
          "Folders",
          "Trash"
        ],
        "x-box-reference-category": "folders",
        "description": "Permanently deletes a folder in the trash. The item will no longer\nexist in Box. This action cannot be undone.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "An empty `204 No Content` response will be returned upon successful\ndeletion."
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folder_id}/metadata": {
      "get": {
        "operationId": "get_folders_id_metadata",
        "summary": "Get all folder metadata",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Retrieves all metadata for a given folder.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all the metadata associated with a folder.\n\nThis API does not support pagination and will therefore always return\nall of the metadata associated to the folder.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadatas"
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folder_id}/metadata/{scope}/{template_key}": {
      "get": {
        "operationId": "get_folders_id_metadata_id_id",
        "summary": "Get a specific folder metadata",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Retrieve a specific metadata template instance for a folder",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "An instance of the metadata template that includes\nadditional `key:value` pairs defined by the user or\nan application.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the metadata template specified\nwas not applied to this folder.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_folders_id_metadata_id_id",
        "summary": "Create metadata on folder",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Creates a piece of metadata on a folder based on the specified template.\n\nOnly values that are present in the metadata template\nwill be accepted.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "example_key": "Example Value"
                },
                "additionalProperties": {
                  "type": "string",
                  "example": "Example Value"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an instance of the template that was specified, with the\ncustom template data included.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "409": {
            "description": "If the piece of metadata already exists, a conflict error\nwill be returned. The metadata can then instead be updated with the\n`put` method.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_folders_id_metadata_id_id",
        "summary": "Update metadata on folder",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Updates a piece of metadata on a folder based.\n\nThe metadata instance can only be updated if the instance\nalready exists. When editing metadata, only values that adhere to the\nmetadata template schema will be accepted.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata instance remains unchanged.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\nspecification for the changes to make to the metadata.\nThe changes are represented as a JSON array of\noperation objects.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetadataPatchItem"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated metadata template instance, with the\ncustom template data included.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "409": {
            "description": "If the piece of metadata already exists, a conflict error\nwill be returned. The metadata can then instead be updated with the\n`put` method.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_folders_id_metadata_id_id",
        "summary": "Delete metadata on folder",
        "tags": [
          "File & Folder Metadata"
        ],
        "x-box-reference-category": "metadata",
        "description": "Deletes a piece of folder metadata.",
        "parameters": [
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the metadata is\nsuccessfully deleted."
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/trash/items": {
      "get": {
        "operationId": "get_folders_trash_items",
        "summary": "Get all trashed items",
        "tags": [
          "Folders",
          "Trash"
        ],
        "x-box-reference-category": "trash",
        "description": "Retrieves the files and folders that have been moved\nto the trash.\n\nAny attribute in the full files or folders objects can be passed\nin with the `fields` parameter to retrieve those specific\nattributes that are not returned by default.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of items that have been deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                }
              }
            }
          }
        }
      }
    },
    "/metadata_templates/{scope}/{template_key}/schema": {
      "get": {
        "operationId": "get_metadata_templates_id_id_schema",
        "summary": "Get metadata template by name",
        "tags": [
          "Metadata Templates"
        ],
        "x-box-reference-category": "metadata_templates",
        "description": "Retrieves a metadata template by its scope and template name.",
        "parameters": [
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the metadata template matching the `scope`\nand `template` name.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataTemplate"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_metadata_templates_id_id_schema",
        "tags": [
          "Metadata Templates"
        ],
        "x-box-reference-category": "metadata_templates",
        "summary": "Update a metadata template",
        "description": "Updates a metadata template.\n\nThe metadata template can only be updated if the template\nalready exists.\n\nThe update is applied atomically. If any errors occur during the\napplication of the operations, the metadata template remains unchanged.",
        "parameters": [
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataTemplatePatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated metadata template, with the\ncustom template data included.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataTemplate"
                }
              }
            }
          },
          "400": {
            "description": "The request body contains an invalid metadata schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "The request body contains a scope that the user is not\nallowed to create templates for.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "The requested template could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_metadata_templates_id_id_schema",
        "summary": "Delete metadata template",
        "tags": [
          "Metadata Templates"
        ],
        "x-box-reference-category": "metadata_templates",
        "description": "Delete a metadata template and its instances.\nThis deletion is permanent and can not be reversed.",
        "parameters": [
          {
            "name": "scope",
            "description": "The scope of the metadata template",
            "example": "enterprise_27335",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "global",
                "enterprise_<id>"
              ]
            }
          },
          {
            "name": "template_key",
            "description": "The name of the metadata template",
            "example": "blueprintTemplate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the metadata\ntemplate is successfully deleted."
          },
          "400": {
            "description": "Request body contains an invalid metadata schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "Request body contains a scope that the user is not allowed to\ncreate a template for.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/metadata_templates/{template_id}": {
      "get": {
        "operationId": "get_metadata_templates_id",
        "summary": "Get metadata template by ID",
        "tags": [
          "Metadata Templates"
        ],
        "x-box-reference-category": "metadata_templates",
        "description": "Retrieves a metadata template by its ID.",
        "parameters": [
          {
            "name": "template_id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "in": "path",
            "example": "f7a9891f",
            "description": "The ID of the template"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the metadata template matching the `scope`\nand `template` name.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataTemplate"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/metadata_templates/enterprise": {
      "get": {
        "operationId": "get_metadata_templates_enterprise",
        "summary": "Get enterprise metadata templates",
        "tags": [
          "Metadata Templates"
        ],
        "x-box-reference-category": "metadata_templates",
        "description": "Used to retrieve all metadata templates within a user's enterprise",
        "parameters": [
          {
            "name": "marker",
            "description": "The position marker at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1234,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all of the metadata templates within an enterprise\nand their corresponding schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataTemplates"
                }
              }
            }
          },
          "default": {
            "description": "Generic client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/metadata_templates/schema": {
      "post": {
        "operationId": "post_metadata_templates_schema",
        "summary": "Create metadata template",
        "tags": [
          "Metadata Templates"
        ],
        "description": "Creates a new metadata template that can be applied to files and folders.",
        "x-box-reference-category": "metadata_templates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataTemplate--Writable"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The schema representing the metadata template created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Request body contains an invalid metadata schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "Request body contains a scope that the user is not allowed to\ncreate a template for.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "Create Metadata template error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{comment_id}": {
      "get": {
        "operationId": "get_comments_id",
        "summary": "Get a comment",
        "tags": [
          "Comments"
        ],
        "x-box-reference-category": "comments",
        "description": "Retrieves the message and metadata for a specific comment, as well\nas information on the user who created the comment.",
        "parameters": [
          {
            "name": "comment_id",
            "description": "The ID of the comment.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a full comment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_comments_id",
        "summary": "Update a comment",
        "tags": [
          "Comments"
        ],
        "x-box-reference-category": "comments",
        "description": "Update the message of a comment.",
        "parameters": [
          {
            "name": "comment_id",
            "description": "The ID of the comment.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "The text of the comment to update",
                    "example": "Review completed!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated comment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "default": {
            "description": "A client error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_comments_id",
        "summary": "Delete a comment",
        "tags": [
          "Comments"
        ],
        "x-box-reference-category": "comments",
        "description": "Permanently deletes a comment.",
        "parameters": [
          {
            "name": "comment_id",
            "description": "The ID of the comment.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the comment has been deleted."
          }
        }
      }
    },
    "/comments": {
      "post": {
        "operationId": "post_comments",
        "tags": [
          "Comments"
        ],
        "x-box-reference-category": "comments",
        "summary": "Create a comment",
        "description": "Adds a comment comment by the user to a specific file, or\nas a reply to an other comment.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "message"
                ],
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "The text of the comment.\n\nTo mention a user, user the `tagged_message`\nparameter instead.",
                    "example": "Review completed!"
                  },
                  "tagged_message": {
                    "type": "string",
                    "description": "The text of the comment, including `@[user_id:name]`\nsomewhere in the message to mention another user, which\nwill send them an email notification, letting them know\nthey have been mentioned.\n\nThe `user_id` is the target user's ID, where the `name`\ncan be any custom phrase. In the Box UI this name will\nlink to the user's profile.\n\nIf you are not mentioning another user, use`message`\ninstead.",
                    "example": "@[1234:John] Review completed!"
                  },
                  "item": {
                    "type": "object",
                    "description": "The item to attach the comment to.",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the item",
                        "example": "11446498"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the item that this comment will be placed on.",
                        "example": "file",
                        "enum": [
                          "file",
                          "comment"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created comment object.\n\n[Some fields are optional](#comment) and need to be explicitly\nrequested using the [fields](#post-comments--request--fields) parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/collaborations/{collaboration_id}": {
      "get": {
        "operationId": "get_collaborations_id",
        "summary": "Get a collaboration",
        "x-box-reference-category": "collaborations",
        "tags": [
          "Collaborations"
        ],
        "description": "Retrieves a single collaboration.",
        "parameters": [
          {
            "name": "collaboration_id",
            "description": "The ID of the collaboration",
            "in": "path",
            "required": true,
            "example": "1234",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collaboration object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaboration"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_collaborations_id",
        "tags": [
          "Collaborations"
        ],
        "x-box-reference-category": "collaborations",
        "summary": "Updates a collaboration",
        "description": "Updates a collaboration.\n\nCan be used to change the owner of an item, or to\naccept collaboration invites.",
        "parameters": [
          {
            "name": "collaboration_id",
            "description": "The ID of the collaboration",
            "in": "path",
            "required": true,
            "example": "1234",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "The level of access granted.",
                    "example": "editor",
                    "enum": [
                      "editor",
                      "viewer",
                      "previewer",
                      "uploader",
                      "previewer uploader",
                      "viewer uploader",
                      "co-owner"
                    ]
                  },
                  "can_view_path": {
                    "type": "boolean",
                    "description": "Determines if the invited users can see the entire parent path to\nthe associated folder. The user will not gain privileges in any\nparent folder and therefore can not see content the user is not\ncollaborated on.",
                    "example": true
                  },
                  "status": {
                    "type": "string",
                    "description": "Set the status of a `pending` collaboration invitation,\neffectively accepting, or rejecting the invite.",
                    "example": "accepted",
                    "enum": [
                      "pending",
                      "accepted",
                      "rejected"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an updated collaboration object unless the owner has changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaboration"
                }
              }
            }
          },
          "204": {
            "description": "If the role is changed to `owner`, the collaboration is deleted\nand a new collaboration is created. The previous `owner` of\nthe old collaboration will be a `co-owner` on the new collaboration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaboration"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_collaborations_id",
        "summary": "Delete a collaboration",
        "tags": [
          "Collaborations"
        ],
        "x-box-reference-category": "collaborations",
        "description": "Deletes a single collaboration.",
        "parameters": [
          {
            "name": "collaboration_id",
            "description": "The ID of the collaboration",
            "in": "path",
            "required": true,
            "example": "1234",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the collaboration was\nsuccessfully deleted."
          }
        }
      }
    },
    "/collaborations": {
      "get": {
        "operationId": "get_collaborations",
        "summary": "Get pending collaborations",
        "tags": [
          "Collaborations"
        ],
        "x-box-reference-category": "collaborations",
        "description": "Retrieves all pending collaboration invites for this user.",
        "parameters": [
          {
            "name": "status",
            "description": "The status of the collaborations to retrieve",
            "in": "query",
            "required": true,
            "example": "pending",
            "schema": {
              "type": "string",
              "enum": [
                "pending"
              ]
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of pending collaboration objects.\n\nIf the user has no pending collaborations, the collection\nwill be empty.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaborations"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_collaborations",
        "tags": [
          "Collaborations"
        ],
        "x-box-reference-category": "collaborations",
        "summary": "Creates a collaboration",
        "description": "Adds a collaboration for a single user or a single group to a file\nor folder.\n\nCollaborations can be created using email address, user IDs, or a\ngroup IDs.\n\nIf a collaboration is being created with a group, access to\nthis endpoint is dependent on the group's ability to be invited.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify",
            "description": "Determines if users should receive email notification\nfor the action performed.",
            "in": "query",
            "required": false,
            "example": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "item",
                  "accessible_by",
                  "role"
                ],
                "properties": {
                  "item": {
                    "type": "object",
                    "description": "The item to attach the comment to.",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of the item that this collaboration will be\ngranted access to",
                        "example": "file",
                        "enum": [
                          "file",
                          "folder"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the item that will be granted access to",
                        "example": "11446498"
                      }
                    }
                  },
                  "accessible_by": {
                    "type": "object",
                    "description": "The user or group to give access to the item.",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of collaborator to invite.",
                        "example": "user",
                        "enum": [
                          "user",
                          "group"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the user or group.\n\nAlternatively, use `login` to specify a user by email\naddress.",
                        "example": "23522323"
                      },
                      "login": {
                        "type": "string",
                        "description": "The email address of the user to grant access to the item.\n\nAlternatively, use `id` to specify a user by user ID.",
                        "example": "john@example.com"
                      }
                    }
                  },
                  "role": {
                    "type": "string",
                    "description": "The level of access granted.",
                    "example": "editor",
                    "enum": [
                      "editor",
                      "viewer",
                      "previewer",
                      "uploader",
                      "previewer uploader",
                      "viewer uploader",
                      "co-owner"
                    ]
                  },
                  "can_view_path": {
                    "type": "boolean",
                    "description": "Determines if the invited users can see the entire parent path to\nthe associated folder. The user will not gain privileges in any\nparent folder and therefore can not see content the user is not\ncollaborated on.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new collaboration object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collaboration"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "operationId": "get_search",
        "summary": "Search for content",
        "tags": [
          "Search"
        ],
        "x-box-reference-category": "search",
        "description": "Searches for items that are available to the user or an entire enterprise.",
        "parameters": [
          {
            "name": "query",
            "description": "The string to search for. This query is matched against item names,\ndescriptions, text content of files, and various other fields of\nthe different item types.",
            "in": "query",
            "required": true,
            "example": "sales",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "Limits search results to a user scope.\n\nDefaults to `user_content` which limits the search to content\navailable to the current user\n\nSetting this to `enterprise_content` widens the search to content\navailable to the entire enterprise. To enable this scope for an\nadministrator, please reach out to support.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "user_content",
                "enterprise_content"
              ]
            },
            "example": "user_content"
          },
          {
            "name": "file_extensions",
            "description": "Limits search results to a comma-separated list of\nfile extensions.",
            "example": "pdf,png,gif",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at_range",
            "description": "Limits search results to items created within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the she start date is omitted (`\",[end_date]\"`) the\nearliest known date will be used as the start date instead.\n\nIf the end date is omitted (`\"[start_date],\"`) the current\ndate will be used as the end date instead.",
            "example": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_at_range",
            "description": "Limits search results to items updated within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the she start date is omitted (`\",[end_date]\"`) the\nearliest known date will be used as the start date instead.\n\nIf the end date is omitted (`\"[start_date],\"`) the current\ndate will be used as the end date instead.",
            "example": "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size_range",
            "description": "Limits search results to items within a given file size\nrange.\n\nFile size ranges are defined as comma separated byte sizes.\n\nThe upper and lower bound can be omitted to create open ranges.",
            "example": "1000000,5000000",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owner_user_ids",
            "description": "Limits search results to items owned\nby the given list of owners.\n\nOwners are defined as a comma separated list of user IDs.",
            "example": "123422,23532,3241212",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ancestor_folder_ids",
            "description": "Limits search results to items within the given\nlist of folders.\n\nFolders are defined as a comma separated lists\nof folder IDs.\n\nSearch results will also include items within subfolders.",
            "example": "4535234,234123235,2654345",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content_types",
            "description": "Limits search results to items with the given\ncontent types.\n\nContent types are defined as a comma separated lists\nof Box recognized content types.\n\nAvailable content types are:\n\n* `name`\n* `description`\n* `file_content`\n* `comments`\n* `tags",
            "in": "query",
            "example": "name,description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Limits search results to items of this type.",
            "example": "file",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "file",
                "folder",
                "web_link"
              ]
            }
          },
          {
            "name": "trash_content",
            "description": "Controls if search results include the trash.\n\nDefaults to `non_trashed_only`",
            "in": "query",
            "required": false,
            "example": "non_trashed_only",
            "schema": {
              "type": "string",
              "enum": [
                "non_trashed_only",
                "trashed_only"
              ]
            }
          },
          {
            "name": "mdfilters",
            "description": "Limits search results to items that match the\nmetadata template name and content.",
            "in": "query",
            "required": false,
            "example": [
              {
                "scope": "enterprise",
                "templateKey": "marketingCollateral",
                "filters": {
                  "documentType": "datasheet"
                }
              }
            ],
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MetadataFilter"
              }
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of search results. If there are no matching\nsearch results, the `entries` array will be empty.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "operationId": "post_tasks",
        "tags": [
          "Tasks"
        ],
        "summary": "Create a task",
        "x-box-reference-category": "tasks",
        "description": "Creates a single task on a file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "item",
                  "action"
                ],
                "properties": {
                  "item": {
                    "type": "object",
                    "description": "The file to attach the task to.",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the file",
                        "example": "11446498"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the item to attach this task to.",
                        "example": "file",
                        "enum": [
                          "file"
                        ]
                      }
                    }
                  },
                  "action": {
                    "type": "string",
                    "description": "The action the task assignee will be prompted to complete.\n\nCurrently only `review` is supported. This will provide the\nassigned user the ability to approve or reject the\nassociated request.",
                    "example": "review",
                    "enum": [
                      "review"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "An optional message to include with the task",
                    "example": "Please review"
                  },
                  "due_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the task is due",
                    "example": "2012-12-12T10:53:43-08:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new task object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "operationId": "get_tasks_id",
        "summary": "Get a task",
        "tags": [
          "Tasks"
        ],
        "x-box-reference-category": "tasks",
        "description": "Fetches a specific task.",
        "parameters": [
          {
            "name": "task_id",
            "description": "The ID of the task.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a task object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_tasks_id",
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task",
        "x-box-reference-category": "tasks",
        "description": "Updates a specific task.",
        "parameters": [
          {
            "name": "task_id",
            "description": "The ID of the task.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "item",
                  "action"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "The action the task assignee will be prompted to complete.\n\nCurrently only `review` is supported. This will provide the\nassigned user the ability to approve or reject the\nassociated request.",
                    "example": "review",
                    "enum": [
                      "review"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "The message included with the task",
                    "example": "Please review"
                  },
                  "due_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the task is due",
                    "example": "2012-12-12T10:53:43-08:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated task object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tasks_id",
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task",
        "x-box-reference-category": "tasks",
        "description": "Deletes a specific task.",
        "parameters": [
          {
            "name": "task_id",
            "description": "The ID of the task.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "An empty response will be returned when the task was successfully deleted."
          }
        }
      }
    },
    "/tasks/{task_id}/assignments": {
      "get": {
        "operationId": "get_tasks_id_assignments",
        "summary": "Get task assignments",
        "tags": [
          "Tasks"
        ],
        "x-box-reference-category": "tasks",
        "description": "Retrieves all of the assignments for a given task.",
        "parameters": [
          {
            "name": "task_id",
            "description": "The ID of the task.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of task assignment specifying what task on\na file has been assigned to which users and by who.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignments"
                }
              }
            }
          }
        }
      }
    },
    "/task_assignments": {
      "post": {
        "operationId": "post_task_assignments",
        "summary": "Create task assignment",
        "tags": [
          "Tasks"
        ],
        "x-box-reference-category": "tasks",
        "description": "Assigns a task to a user.\n\nMultiple assignments to different users\nare allowed per task.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "task",
                  "assign_to"
                ],
                "properties": {
                  "task": {
                    "type": "object",
                    "description": "The task to assign to a user.",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the task",
                        "example": "11446498"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the item to assign.",
                        "example": "task",
                        "enum": [
                          "task"
                        ]
                      }
                    }
                  },
                  "assign_to": {
                    "type": "object",
                    "description": "The user to assign the task to.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the user to assign to the\ntask.\n\nTo specify a user by their email\naddress use the `login` parameter.",
                        "example": "3242343"
                      },
                      "login": {
                        "type": "string",
                        "description": "The email address of the user to assign to the task.\nTo specify a user by their user ID please use the `id` parameter.",
                        "example": "john@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new task assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/task_assignments/{task_assignment_id}": {
      "get": {
        "operationId": "get_task_assignments_id",
        "summary": "Get task assignment",
        "tags": [
          "Tasks"
        ],
        "x-box-reference-category": "tasks",
        "description": "Fetches a specific task assignment.",
        "parameters": [
          {
            "name": "task_assignment_id",
            "description": "The ID of the task assignment.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested task assignment, specifying who\nthe task has been assigned to and by whom.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_task_assignments_id",
        "summary": "Update task assignment",
        "tags": [
          "Tasks"
        ],
        "x-box-reference-category": "tasks",
        "description": "Updates a task assignment. This endpoint can be\nused to update the state of a task.",
        "parameters": [
          {
            "name": "task_assignment_id",
            "description": "The ID of the task assignment.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "A message from the assignee about this task",
                    "example": "Please review"
                  },
                  "resolution_state": {
                    "type": "string",
                    "description": "The state of the task. This can be used to\nmark the task as completed.",
                    "example": "completed",
                    "enum": [
                      "completed",
                      "incomplete",
                      "approved",
                      "rejected"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated task assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_task_assignments_id",
        "summary": "Delete task assignment",
        "tags": [
          "Tasks"
        ],
        "x-box-reference-category": "tasks",
        "description": "Deletes a specific task assignment.",
        "parameters": [
          {
            "name": "task_assignment_id",
            "description": "The ID of the task assignment.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "An empty response will be returned when the task\nassignment was successfully deleted."
          }
        }
      }
    },
    "/web_links": {
      "post": {
        "operationId": "post_web_links",
        "summary": "Create a web link",
        "tags": [
          "Web Links"
        ],
        "x-box-reference-category": "web_links",
        "description": "Creates a web link object within a folder.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "parent",
                  "url"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "example": "https://box.com",
                    "description": "The URL that the web link points to. Must start with\n`\"http://\"` or `\"https://\"`."
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder to put the web link in"
                      }
                    ]
                  },
                  "name": {
                    "type": "string",
                    "example": "Box Website",
                    "description": "Name of the web link. Defaults to the URL if not set."
                  },
                  "description": {
                    "type": "string",
                    "example": "Cloud Content Management",
                    "description": "Description of the web link."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the newly created web link object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebLink"
                }
              }
            }
          }
        }
      }
    },
    "/web_links/{web_link_id}": {
      "get": {
        "operationId": "get_web_links_id",
        "summary": "Get a web link",
        "tags": [
          "Web Links"
        ],
        "x-box-reference-category": "web_links",
        "description": "Retrieve information about a web link.",
        "parameters": [
          {
            "name": "web_link_id",
            "description": "The ID of the web link.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the web link object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebLink"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_web_links_id",
        "summary": "Update a web link",
        "tags": [
          "Web Links"
        ],
        "x-box-reference-category": "web_links",
        "description": "Updates a web link object.",
        "parameters": [
          {
            "name": "web_link_id",
            "description": "The ID of the web link.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "url": {
                    "type": "string",
                    "example": "https://box.com",
                    "description": "The new URL that the web link points to. Must start with\n`\"http://\"` or `\"https://\"`."
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The new parent folder to put the web link in.\nUse this to move the web link to a different folder."
                      }
                    ]
                  },
                  "name": {
                    "type": "string",
                    "example": "Box Website",
                    "description": "A new name for the web link. Defaults to the URL if not set."
                  },
                  "description": {
                    "type": "string",
                    "example": "Cloud Content Management",
                    "description": "A new description of the web link."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated web link object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebLink"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_web_links_id",
        "summary": "Delete a web link",
        "tags": [
          "Web Links"
        ],
        "x-box-reference-category": "web_links",
        "description": "Deletes a web link.",
        "parameters": [
          {
            "name": "web_link_id",
            "description": "The ID of the web link.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "An empty response will be returned when the web link\nwas successfully deleted."
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "get_users",
        "x-box-reference-category": "users",
        "summary": "Get enterprise users",
        "tags": [
          "Users"
        ],
        "description": "Returns a list of all users for the Enterprise along with their user_id,\npublic_name, and login.\n\nThe application and the authenticated user need to\nhave the permission to look up users in the entire\nenterprise.",
        "parameters": [
          {
            "name": "filter_term",
            "description": "Limits the results to only users who's `name` or\n`login` start with the search term.\n\nFor externally managed users, the search term needs\nto completely match in order to find the user.",
            "in": "query",
            "required": false,
            "example": "john",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_type",
            "description": "Limits the results to the kind  of user specified.",
            "in": "query",
            "required": false,
            "example": "managed",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "external",
                "managed"
              ]
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all of the users in the enterprise.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_users",
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "x-box-reference-category": "users",
        "description": "Creates a new managed user in an enterprise. This endpoint\nis only available to users and applications with the right\nadmin permissions.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the user",
                    "example": "Aaron Levie",
                    "maxLength": 50
                  },
                  "login": {
                    "type": "string",
                    "description": "The email address the user uses to log in\n\nRequired, unless `is_platform_access_only`\nis set to `true`.",
                    "example": "boss@box.com"
                  },
                  "is_platform_access_only": {
                    "type": "boolean",
                    "example": true,
                    "description": "Specifies that the user is an app user."
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "coadmin",
                      "user"
                    ],
                    "description": "The user’s enterprise role",
                    "example": "user"
                  },
                  "language": {
                    "type": "string",
                    "format": "ISO639-1-BOX",
                    "description": "The language of the user, formatted in modified version of the\n[ISO 639-1][1] format.\n\n[1]: https://developer.box.com/docs/api-language-codes",
                    "example": "en"
                  },
                  "is_sync_enabled": {
                    "type": "boolean",
                    "description": "Whether the user can use Box Sync",
                    "example": true
                  },
                  "job_title": {
                    "type": "string",
                    "description": "The user’s job title",
                    "maxLength": 100,
                    "example": "CEO"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The user’s phone number",
                    "maxLength": 100,
                    "example": "6509241374"
                  },
                  "address": {
                    "type": "string",
                    "description": "The user’s address",
                    "maxLength": 255,
                    "example": "900 Jefferson Ave, Redwood City, CA 94063"
                  },
                  "space_amount": {
                    "type": "integer",
                    "description": "The user’s total available space in bytes",
                    "example": 11345156112
                  },
                  "tracking_codes": {
                    "type": "array",
                    "description": "An array of key/value pairs set by the user’s admin",
                    "example": [
                      "code1: 12345"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "can_see_managed_users": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user can see other enterprise users in their\ncontact list"
                  },
                  "timezone": {
                    "type": "string",
                    "format": "timezone",
                    "description": "The user's timezone",
                    "example": "Africa/Bujumbura"
                  },
                  "is_external_collab_restricted": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user is allowed to collaborate with users outside her\nenterprise"
                  },
                  "is_exempt_from_device_limits": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether to exempt the user from enterprise device limits"
                  },
                  "is_exempt_from_login_verification": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user must use two-factor authentication"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "cannot_delete_edit",
                      "cannot_delete_edit_upload"
                    ],
                    "description": "The user's account status",
                    "example": "active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a user object for the newly created user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "operationId": "get_users_me",
        "x-box-reference-category": "users",
        "summary": "Get authenticated user",
        "tags": [
          "Users"
        ],
        "description": "Retrieves information about the user who is currently authenticated.\n\nIn the case of a 3-legged OAuth2, client-side authenticated application\nthis will be the user who authorized the app.\n\nIn the case of a JWT, server-side authenticated application\nthis will be the service account that belongs to the application\nby default.\n\nUse the `As-User` header to change who this API call is made on behalf of.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single user object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "operationId": "get_users_id",
        "x-box-reference-category": "users",
        "summary": "Get authenticated user",
        "tags": [
          "Users"
        ],
        "description": "Retrieves information about a user in the enterprise.\n\nThe application and the authenticated user need to\nhave the permission to look up users in the entire\nenterprise.\n\nThis endpoint also returns a limited set of information\nfor external users who are collaborated on content\nowned by the enterprise for authenticated users with the\nright scopes. In this case, disallowed fields will return\nnull instead.",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single user object.\n\n[Some fields are optional](#user) and need to be explicitly\nrequested using the [fields](#get-users-id--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_users_id",
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "x-box-reference-category": "users",
        "description": "Updates a managed user in an enterprise. This endpoint\nis only available to users and applications with the right\nadmin permissions.",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "enterprise": {
                    "type": "string",
                    "example": null,
                    "description": "Set this to `null` to roll the user out of the enterprise\nand make them a free user"
                  },
                  "notify": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user should receive an email when they\nare rolled out of an enterprise"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the user",
                    "example": "Aaron Levie",
                    "maxLength": 50
                  },
                  "login": {
                    "type": "string",
                    "description": "The email address the user uses to log in",
                    "example": "boss@box.com"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "coadmin",
                      "user"
                    ],
                    "description": "The user’s enterprise role",
                    "example": "user"
                  },
                  "language": {
                    "type": "string",
                    "format": "ISO639-1-BOX",
                    "description": "The language of the user, formatted in modified version of the\n[ISO 639-1][1] format.\n\n[1]: https://developer.box.com/docs/api-language-codes",
                    "example": "en"
                  },
                  "is_sync_enabled": {
                    "type": "boolean",
                    "description": "Whether the user can use Box Sync",
                    "example": true
                  },
                  "job_title": {
                    "type": "string",
                    "description": "The user’s job title",
                    "maxLength": 100,
                    "example": "CEO"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The user’s phone number",
                    "maxLength": 100,
                    "example": "6509241374"
                  },
                  "address": {
                    "type": "string",
                    "description": "The user’s address",
                    "maxLength": 255,
                    "example": "900 Jefferson Ave, Redwood City, CA 94063"
                  },
                  "tracking_codes": {
                    "type": "array",
                    "description": "An array of key/value pairs set by the user’s admin",
                    "example": [
                      "code1: 12345"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "can_see_managed_users": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user can see other enterprise users in their\ncontact list"
                  },
                  "timezone": {
                    "type": "string",
                    "format": "timezone",
                    "description": "The user's timezone",
                    "example": "Africa/Bujumbura"
                  },
                  "is_external_collab_restricted": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user is allowed to collaborate with users outside her\nenterprise"
                  },
                  "is_exempt_from_device_limits": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether to exempt the user from enterprise device limits"
                  },
                  "is_exempt_from_login_verification": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user must use two-factor authentication"
                  },
                  "is_password_reset_required": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the user is required to reset their password"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "cannot_delete_edit",
                      "cannot_delete_edit_upload"
                    ],
                    "description": "The user's account status",
                    "example": "active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated user object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_users_id",
        "x-box-reference-category": "users",
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "description": "Deletes a user. By default this will fail if the user\nstill owns any content. Move their owned content first\nbefore proceeding, or use the `force` field to delete\nthe user and their files.",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "example": true,
            "description": "Whether the user will receive email notification of\nthe deletion"
          },
          {
            "name": "force",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "example": true,
            "description": "Whether the user should be deleted even if this user\nstill own files"
          }
        ],
        "responses": {
          "204": {
            "description": "Removes the user and returns an empty response."
          }
        }
      }
    },
    "/users/{user_id}/avatar": {
      "get": {
        "operationId": "get_users_id_avatar",
        "x-box-reference-category": "users",
        "summary": "Get user avatar",
        "tags": [
          "Users"
        ],
        "description": "Retrieves an image of a the user's avatar.",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "When an avatar can be found for the user the\nimage data will be returned in the body of the\nresponse.",
            "content": {
              "image/jpg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "The avatar"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/folders/{folder_id}": {
      "put": {
        "operationId": "put_users_id_folders_id",
        "x-box-reference-category": "users",
        "summary": "Move owned items",
        "tags": [
          "Users"
        ],
        "description": "Move all of the items owned by a user into a\nnew folder in another user’s account.\n\nOnly moving of the root folder, `0`, is supported.\n\nFolders can only be moved across users by users with administrative\npermissions.\n\nThis call will be performed synchronously which might lead to a slow response\nwhen the source user has a large number of items in all of its folders.\n\nIf the destination path has a metadata cascade policy attached to any of\nthe parent folders, a metadata cascade operation will be kicked off\nasynchronously.\n\nThere is currently no way to check for when this operation is finished.",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder_id",
            "description": "The ID of the folder.\n\nThe root folder of a Box account is\nalways represented by the id `\"0\"`.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify",
            "description": "Determines if users should receive email notification\nfor the action performed.",
            "in": "query",
            "required": false,
            "example": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "owned_by"
                ],
                "properties": {
                  "enterprise": {
                    "type": "object",
                    "description": "The user who the folder will be transferred to",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1232234",
                        "description": "The ID of the user who the folder will be\ntransferred to"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the information for the newly created\ndestination folder.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/email_aliases": {
      "get": {
        "operationId": "get_users_id_email_aliases",
        "summary": "Get a user's email aliases",
        "tags": [
          "Users"
        ],
        "x-box-reference-category": "users",
        "description": "Retrieves all email aliases for a user. The collection\ndoes not include the primary login for the user.",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of email aliases.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAliases"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_users_id_email_aliases",
        "x-box-reference-category": "users",
        "summary": "Create an email alias",
        "tags": [
          "Users"
        ],
        "description": "Adds a new email alias to a user account..",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "alias@example.com",
                    "description": "The email address to add to the account as an alias."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created email alias object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailAlias"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/email_aliases/{email_alias_id}": {
      "delete": {
        "operationId": "delete_users_id_email_aliases_id",
        "x-box-reference-category": "users",
        "summary": "Remove an email alias",
        "tags": [
          "Users"
        ],
        "description": "Removes an email alias from a user.",
        "parameters": [
          {
            "name": "user_id",
            "description": "The ID of the user.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email_alias_id",
            "description": "The ID of the email alias.",
            "example": "23432",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Removes the alias and returns an empty response."
          }
        }
      }
    },
    "/invites": {
      "post": {
        "operationId": "post_invites",
        "summary": "Invite a user",
        "tags": [
          "Users"
        ],
        "x-box-reference-category": "users",
        "description": "Invites an existing external user to join an enterprise.\n\nThe existing user can not be part of another enterprise and\nmust already have a Box account. Once invited, the user will receive an\nemail and are prompted to accept the invitation within the\nBox web application.\n\nThis method requires the `\"Manage An Enterprise\"` scope enabled for\nthe application, which can be enabled within the developer console.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "enterprise",
                  "actionable_by"
                ],
                "properties": {
                  "enterprise": {
                    "type": "object",
                    "description": "The enterprise to invite the user to",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1232234",
                        "description": "The ID of the enterprise"
                      }
                    }
                  },
                  "actionable_by": {
                    "type": "object",
                    "description": "The user to invite",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "login": {
                        "type": "string",
                        "example": "john@example.com",
                        "description": "The login of the invited user"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a new invite object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "operationId": "get_groups",
        "summary": "Get enterprise groups",
        "x-box-reference-category": "groups",
        "tags": [
          "Groups"
        ],
        "description": "Retrieves all of the groups for a given enterprise. The user\nmust have admin permissions to inspect enterprise's groups.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The maximum number of items to return per page.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "description": "The offset of the item at which to begin the response.",
            "in": "query",
            "required": false,
            "example": 1000,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of group objects. If there are no groups, an\nempty collection will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Groups"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_groups",
        "summary": "Create a group",
        "tags": [
          "Groups"
        ],
        "x-box-reference-category": "groups",
        "description": "Creates a new group of users in an enterprise. Only users with admin\npermissions can create new groups.",
        "parameters": [
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Customer Support",
                    "description": "The name of the new group to be created"
                  },
                  "provenance": {
                    "type": "string",
                    "description": "Keeps track of which external source this group is\ncoming, for example `Active Directory`, or `Okta`.\n\nSetting this will also prevent Box admins from editing\nthe group name and its members directly via the Box\nweb application.\n\nThis is desirable for one-way syncing of groups.",
                    "maxLength": 255,
                    "example": "Active Directory"
                  },
                  "external_sync_identifier": {
                    "type": "string",
                    "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group.\n\nExample values of this field\ncould be an **Active Directory Object ID** or a **Google\nGroup ID**.\n\nWe recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems.",
                    "example": "AD:123456"
                  },
                  "description": {
                    "type": "string",
                    "description": "A human readable description of the group.",
                    "maxLength": 255,
                    "example": "\"Customer Support Group - as imported from Active Directory\""
                  },
                  "invitability_level": {
                    "type": "string",
                    "example": "admins_only",
                    "description": "Specifies who can invite the group to collaborate\non folders.\n\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\n\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\n\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group.",
                    "enum": [
                      "admins_only",
                      "admins_and_members",
                      "all_managed_users"
                    ]
                  },
                  "member_viewability_level": {
                    "type": "string",
                    "example": "admins_only",
                    "description": "Specifies who can see the members of the group.\n\n* `admins_only - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise",
                    "enum": [
                      "admins_only",
                      "admins_and_members",
                      "all_managed_users"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the new group object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}": {
      "get": {
        "operationId": "get_groups_id",
        "summary": "Get a group",
        "tags": [
          "Groups"
        ],
        "x-box-reference-category": "groups",
        "description": "Retrieves information about a group.",
        "parameters": [
          {
            "name": "group_id",
            "description": "The ID of the group.",
            "example": "57645",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the group object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_groups_id",
        "summary": "Update a group",
        "tags": [
          "Groups"
        ],
        "x-box-reference-category": "groups",
        "description": "Updates a specific group.",
        "parameters": [
          {
            "name": "group_id",
            "description": "The ID of the group.",
            "example": "57645",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Customer Support",
                    "description": "The name of the new group to be created"
                  },
                  "provenance": {
                    "type": "string",
                    "description": "Keeps track of which external source this group is\ncoming, for example `Active Directory`, or `Okta`.\n\nSetting this will also prevent Box admins from editing\nthe group name and its members directly via the Box\nweb application.\n\nThis is desirable for one-way syncing of groups.",
                    "maxLength": 255,
                    "example": "Active Directory"
                  },
                  "external_sync_identifier": {
                    "type": "string",
                    "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group.\n\nExample values of this field\ncould be an **Active Directory Object ID** or a **Google\nGroup ID**.\n\nWe recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems.",
                    "example": "AD:123456"
                  },
                  "description": {
                    "type": "string",
                    "description": "A human readable description of the group.",
                    "maxLength": 255,
                    "example": "\"Customer Support Group - as imported from Active Directory\""
                  },
                  "invitability_level": {
                    "type": "string",
                    "example": "admins_only",
                    "description": "Specifies who can invite the group to collaborate\non folders.\n\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\n\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\n\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group.",
                    "enum": [
                      "admins_only",
                      "admins_and_members",
                      "all_managed_users"
                    ]
                  },
                  "member_viewability_level": {
                    "type": "string",
                    "example": "admins_only",
                    "description": "Specifies who can see the members of the group.\n\n* `admins_only - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise",
                    "enum": [
                      "admins_only",
                      "admins_and_members",
                      "all_managed_users"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the updated group object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_groups_id",
        "summary": "Delete a group",
        "tags": [
          "Groups"
        ],
        "x-box-reference-category": "groups",
        "description": "Permanently deletes a group.",
        "parameters": [
          {
            "name": "group_id",
            "description": "The ID of the group.",
            "example": "57645",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the collaboration was\nsuccessfully deleted."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2Security": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
            "tokenUrl": "https://api.box.com/oauth2/token",
            "scopes": {
              "root_readonly": "Read all files and folders stored in Box",
              "root_readwrite": "Read and write all files and folders stored in Box",
              "manage_app_users": "Provision and manage app users",
              "manage_managed_users": "Provision and manage managed users",
              "manage_groups": "Manage an enterprise's groups",
              "manage_webhook": "Create webhooks programmatically through the API",
              "manage_enterprise_properties": "Manage enterprise properties",
              "manage_data_retention": "Manage data retention polices",
              "manage_legal_hold": "Manage Legal Holds"
            }
          }
        }
      }
    },
    "schemas": {
      "AccessToken": {
        "x-box-resource-id": "access_token",
        "description": "A token that can be used to make authenticated API calls.",
        "x-box-reference-category": "authorization",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccessToken--Mini"
          },
          {
            "properties": {
              "refresh_token": {
                "type": "string",
                "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                "description": "The refresh token for this access token, which can be used\nto request a new access token when the current one expires."
              },
              "issued_token_type": {
                "type": "string",
                "example": "urn:ietf:params:oauth:token-type:access_token",
                "enum": [
                  "urn:ietf:params:oauth:token-type:access_token"
                ],
                "description": "The type of downscoped access token returned. This is only\nreturned if an access token has been downscoped."
              }
            }
          }
        ]
      },
      "AccessToken--Mini": {
        "x-box-resource-id": "access_token--mini",
        "description": "The basics of an access token",
        "x-box-reference-hide": true,
        "properties": {
          "access_token": {
            "type": "string",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
            "description": "The requested access token."
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 3600,
            "description": "The time in seconds in seconds by which this token will expire."
          },
          "token_type": {
            "type": "string",
            "enum": [
              "bearer"
            ],
            "example": "bearer",
            "description": "The type of access token returned."
          },
          "restricted_to": {
            "type": "array",
            "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
            "items": {
              "$ref": "#/components/schemas/FileScope"
            }
          }
        }
      },
      "AssignmentCounts": {
        "x-box-resource-id": "assignment_counts",
        "description": "Counts of assignments within this a legal hold policy by item type",
        "properties": {
          "user": {
            "type": "integer",
            "format": "int64",
            "description": "The number of users this policy is applied to",
            "example": 1
          },
          "folder": {
            "type": "integer",
            "format": "int64",
            "description": "The number of folders this policy is applied to",
            "example": 2
          },
          "file": {
            "type": "integer",
            "format": "int64",
            "description": "The number of files this policy is applied to",
            "example": 3
          },
          "file_version": {
            "type": "integer",
            "format": "int64",
            "description": "The number of file versions this policy is applied to",
            "example": 4
          }
        }
      },
      "ClientError": {
        "x-box-resource-id": "client_error",
        "description": "A generic error",
        "properties": {
          "type": {
            "description": "Always `error`",
            "example": "error",
            "type": "string",
            "enum": [
              "error"
            ]
          },
          "status": {
            "description": "The HTTP status of the response.",
            "example": 400,
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "description": "A Box-specific error code",
            "example": "item_name_invalid",
            "type": "string"
          },
          "help_url": {
            "description": "A URL that links to more information about why the error occurred.",
            "example": "http://developers.box.com/docs/#errors",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message describing the error.",
            "example": "Item name invalid",
            "type": "string"
          },
          "request_id": {
            "description": "The unique ID for this request as can be used when contacting\nBox support.",
            "type": "string",
            "example": "abcdef123456"
          }
        }
      },
      "Collaboration": {
        "x-box-resource-id": "collaboration",
        "description": "Collaborations define access permissions for users and groups to files and\nfolders, similar to access control lists. A collaboration object grants a\nuser or group access to a file or folder with permissions defined by a\nspecific role.",
        "x-box-reference-category": "collaborations",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "description": "The file or folder that access is granted to"
                  }
                ]
              },
              "accessible_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user or group that is granted access"
                  }
                ]
              },
              "invite_email": {
                "type": "string",
                "example": "john@example.com",
                "description": "The email address used to invite an unregistered collaborator, if\nthey are not a registered user."
              },
              "role": {
                "type": "string",
                "example": "editor",
                "enum": [
                  "editor",
                  "viewer",
                  "previewer",
                  "uploader",
                  "preview uploader",
                  "viewer uploader",
                  "co-owner",
                  "owner"
                ],
                "description": "The level of access granted."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the collaboration will expire"
              },
              "can_view_path": {
                "type": "boolean",
                "example": true,
                "description": "Whether the \"view path collaboration\" feature is enabled or not. View\npath collaborations allow the invitee to see the entire parent path to\nthe item. View path collaboration does not grant privileges in any\nparent folder (e.g. cannot see content the user is not collaborated\non), other than the permission to view the parent path."
              },
              "status": {
                "type": "string",
                "example": "accepted",
                "enum": [
                  "accepted",
                  "pending",
                  "rejected"
                ],
                "description": "The status of the collaboration invitation."
              },
              "acknowledged_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the `status` of the collaboration object changed to\n`accepted` or `rejected`"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the collaboration object"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the collaboration object was created"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the collaboration object was last modified"
              }
            }
          }
        ]
      },
      "Collaborations": {
        "x-box-resource-id": "collaborations",
        "description": "A list of collaborations",
        "x-box-reference-category": "collaborations",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Collaboration"
                }
              }
            }
          }
        ]
      },
      "CollaborationWhitelistEntry": {
        "x-box-resource-id": "collaboration_whitelist_entry",
        "description": "A Collaboration Whitelist entry describes an\napproved domains that can collaborate with your enterprise",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "domain": {
                "type": "string",
                "example": "example.com",
                "description": "The whitelisted domain"
              },
              "direction": {
                "type": "string",
                "example": "both",
                "description": "The direction of the collaborations to whitelist",
                "enum": [
                  "inbound",
                  "outbound",
                  "both"
                ]
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise this whitelist is applied to"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the whitelist entry was created",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "CollaborationWhitelistExemptTarget": {
        "x-box-resource-id": "collaboration_whitelist_exempt_target",
        "description": "The record that represents a target user that is exempt from the\ncollaboration whitelist.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise this entry belongs to"
                  }
                ]
              },
              "user": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The user that has been exempt"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the entry was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the entry was modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Comment": {
        "x-box-resource-id": "comment",
        "x-box-reference-category": "comments",
        "description": "Comments are messages created on files. Comments\ncan be made independently or created as responses to other\ncomments",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Comment--Standard"
          },
          {
            "properties": {
              "tagged_message": {
                "type": "string",
                "example": "@[1234567:Aaron Levie] these tigers are cool!",
                "description": "The string representing the comment text with\n@mentions included. @mention format is @[id:username]\nwhere `id` is user's Box ID an username is\ntheir display name."
              }
            }
          }
        ]
      },
      "Comments": {
        "x-box-resource-id": "comments",
        "description": "A list of comments",
        "x-box-reference-category": "comments",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        ]
      },
      "Comment--Standard": {
        "x-box-resource-id": "comment--standard",
        "description": "Standard representation of a comment, as returned by the\ncomment API endpoints and when nested within other resources.",
        "x-box-reference-hide": true,
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "is_reply_comment": {
                "type": "boolean",
                "description": "Whether or not this comment is a reply to another\ncomment",
                "example": true
              },
              "message": {
                "type": "string",
                "example": "@Aaron Levie these tigers are cool!",
                "description": "The text of the comment, as provided by the user"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "A mini user object representing the author of the\ncomment"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this comment was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this comment was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "description": "The object this comment was placed on"
                  }
                ]
              }
            }
          }
        ]
      },
      "ConflictError": {
        "x-box-resource-id": "conflict_error",
        "description": "The error that occurs when a file can not be created due\nto a conflict.",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientError"
          },
          {
            "properties": {
              "context_info": {
                "type": "object",
                "properties": {
                  "conflicts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/File--Mini"
                      },
                      {
                        "properties": {
                          "sha1": {
                            "type": "string",
                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                            "description": "The SHA1 hash of the file."
                          },
                          "file_version": {
                            "$ref": "#/components/schemas/FileVersion--Mini"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "DevicePinner": {
        "x-box-resource-id": "device_pinner",
        "description": "Device pins allow enterprises to control what devices can\nuse native Box applications.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user that the device pin belongs to"
                  }
                ]
              },
              "product_name": {
                "type": "string",
                "description": "The type of device being pinned",
                "example": "iPad"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the device pin was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the device pin was modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Enterprise": {
        "x-box-resource-id": "enterprise",
        "description": "A representation of a Box enterprise",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "name": {
                "description": "The name of the enterprise",
                "example": "Acme Inc.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EmailAlias": {
        "x-box-resource-id": "email_aliases",
        "x-box-reference-category": "users",
        "description": "An email alias for a user.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "email": {
                "type": "string",
                "description": "The email address",
                "example": "alias@example.com"
              },
              "is_confirmed": {
                "type": "boolean",
                "description": "Whether the email address has been confirmed",
                "example": true
              }
            }
          }
        ]
      },
      "EmailAliases": {
        "x-box-resource-id": "email_aliases",
        "description": "A list of email aliases",
        "x-box-reference-category": "users",
        "properties": {
          "total_count": {
            "description": "The number of email aliases.",
            "example": 5000,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailAlias"
            }
          }
        }
      },
      "Event": {
        "x-box-resource-id": "event",
        "description": "The description of an event that happened within Box",
        "properties": {
          "type": {
            "description": "`event`",
            "type": "string",
            "example": "event"
          },
          "event_id": {
            "type": "string",
            "example": "f82c3ba03e41f7e8a7608363cc6c0390183c3f83",
            "description": "The ID of the event object. You can use this to detect duplicate events"
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User--Mini"
              },
              {
                "description": "The user that performed the action represented by the event.\nSome events may be performed by users not logged into Box.\nIn that case, not all attributes of the object are populated and the\nevent is attributed to a unknown user (`user_id = 2`)"
              }
            ]
          },
          "event_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventType"
              },
              {
                "description": "The event type that triggered this event"
              }
            ]
          },
          "session_id": {
            "type": "string",
            "example": "70090280850c8d2a1933c1",
            "description": "The session of the user that performed the action. Not all events will\npopulate this attribute."
          },
          "source": {
            "type": "object",
            "allOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/File--Standard"
                  },
                  {
                    "$ref": "#/components/schemas/Folder--Standard"
                  },
                  {
                    "$ref": "#/components/schemas/Comment"
                  }
                ]
              }
            ],
            "description": "The object that triggered this event"
          },
          "additional_details": {
            "type": "object",
            "example": "",
            "description": "This object provides additional information about the event if available.\n\nThis can include how a user performed an event as well as additional\ninformation to correlate an event to external Keysafe logs. Not all events\nhave an additional_details object.  This object is only available in the\nEnterprise Events."
          }
        }
      },
      "EventType": {
        "x-box-resource-id": "event_type",
        "example": "FILE_MARKED_MALICIOUS",
        "type": "string",
        "description": "An event type that can trigger an event",
        "enum": [
          "ACCESS_GRANTED",
          "ACCESS_REVOKED",
          "ADD_DEVICE_ASSOCIATION",
          "ADD_LOGIN_ACTIVITY_DEVICE",
          "ADMIN_LOGIN",
          "APPLICATION_CREATED",
          "APPLICATION_PUBLIC_KEY_ADDED",
          "APPLICATION_PUBLIC_KEY_DELETED",
          "CHANGE_ADMIN_ROLE",
          "CHANGE_FOLDER_PERMISSION",
          "COLLABORATION_ACCEPT",
          "COLLABORATION_EXPIRATION",
          "COLLABORATION_INVITE",
          "COLLABORATION_REMOVE",
          "COLLABORATION_ROLE_CHANGE",
          "COLLAB_ADD_COLLABORATOR",
          "COLLAB_INVITE_COLLABORATOR",
          "COLLAB_REMOVE_COLLABORATOR",
          "COLLAB_ROLE_CHANGE",
          "COMMENT_CREATE",
          "COMMENT_DELETE",
          "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY",
          "CONTENT_WORKFLOW_AUTOMATION_ADD",
          "CONTENT_WORKFLOW_AUTOMATION_DELETE",
          "CONTENT_WORKFLOW_POLICY_ADD",
          "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION",
          "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION",
          "COPY",
          "DATA_RETENTION_CREATE_RETENTION",
          "DATA_RETENTION_REMOVE_RETENTION",
          "DELETE",
          "DELETE_USER",
          "DEVICE_TRUST_CHECK_FAILED",
          "DOWNLOAD",
          "EDIT",
          "EDIT_USER",
          "EMAIL_ALIAS_CONFIRM",
          "EMAIL_ALIAS_REMOVE",
          "ENABLE_TWO_FACTOR_AUTH",
          "FAILED_LOGIN",
          "FILE_MARKED_MALICIOUS",
          "FILE_WATERMARKED_DOWNLOAD",
          "GROUP_ADD_ITEM",
          "GROUP_ADD_USER",
          "GROUP_CREATION",
          "GROUP_DELETION",
          "GROUP_EDITED",
          "GROUP_REMOVE_ITEM",
          "GROUP_REMOVE_USER",
          "ITEM_COPY",
          "ITEM_CREATE",
          "ITEM_DOWNLOAD",
          "ITEM_MAKE_CURRENT_VERSION",
          "ITEM_MODIFY",
          "ITEM_MOVE",
          "ITEM_OPEN",
          "ITEM_PREVIEW",
          "ITEM_RENAME",
          "ITEM_SHARED",
          "ITEM_SHARED_CREATE",
          "ITEM_SHARED_UNSHARE",
          "ITEM_SHARED_UPDATE",
          "ITEM_SYNC",
          "ITEM_TRASH",
          "ITEM_UNDELETE_VIA_TRASH",
          "ITEM_UNSYNC",
          "ITEM_UPLOAD",
          "LEGAL_HOLD_ASSIGNMENT_CREATE",
          "LEGAL_HOLD_ASSIGNMENT_DELETE",
          "LEGAL_HOLD_POLICY_CREATE",
          "LEGAL_HOLD_POLICY_DELETE",
          "LEGAL_HOLD_POLICY_UPDATE",
          "LOCK",
          "LOCK_CREATE",
          "LOCK_DESTROY",
          "LOGIN",
          "MASTER_INVITE_ACCEPT",
          "MASTER_INVITE_REJECT",
          "METADATA_INSTANCE_CREATE",
          "METADATA_INSTANCE_DELETE",
          "METADATA_INSTANCE_UPDATE",
          "METADATA_TEMPLATE_CREATE",
          "METADATA_TEMPLATE_DELETE",
          "METADATA_TEMPLATE_UPDATE",
          "MOVE",
          "NEW_USER",
          "PREVIEW",
          "REMOVE_DEVICE_ASSOCIATION",
          "REMOVE_LOGIN_ACTIVITY_DEVICE",
          "RENAME",
          "RETENTION_POLICY_ASSIGNMENT_ADD",
          "SHARE",
          "SHARE_EXPIRATION",
          "STORAGE_EXPIRATION",
          "TAG_ITEM_CREATE",
          "TASK_ASSIGNMENT_CREATE",
          "TASK_ASSIGNMENT_DELETE",
          "TASK_ASSIGNMENT_UPDATE",
          "TASK_CREATE",
          "TASK_UPDATE",
          "TERMS_OF_SERVICE_ACCEPT",
          "TERMS_OF_SERVICE_REJECT",
          "UNDELETE",
          "UNLOCK",
          "UNSHARE",
          "UPDATE_COLLABORATION_EXPIRATION",
          "UPDATE_SHARE_EXPIRATION",
          "UPLOAD",
          "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE",
          "WATERMARK_LABEL_CREATE",
          "WATERMARK_LABEL_DELETE"
        ]
      },
      "File": {
        "x-box-resource-id": "file",
        "description": "A full representation of a file, as can be returned from any\nfile API endpoints by default",
        "x-box-reference-category": "files",
        "allOf": [
          {
            "$ref": "#/components/schemas/File--Standard"
          },
          {
            "properties": {
              "version_number": {
                "type": "string",
                "example": "1",
                "description": "The version number of this file"
              },
              "comment_count": {
                "type": "integer",
                "example": 10,
                "description": "The number of comments on this file"
              },
              "permissions": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Permissions"
                  },
                  {
                    "description": "An object containing the permissions that the current user has\nfor this item"
                  }
                ]
              },
              "tags": {
                "type": "array",
                "example": [
                  "draft",
                  "needs_review"
                ],
                "items": {
                  "type": "string"
                },
                "description": "All tags applied to this folder."
              },
              "lock": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Lock"
                  },
                  {
                    "description": "The lock held on this file. If there is no lock, this can either\nbe `null` or have a timestamp in the past."
                  }
                ]
              },
              "extension": {
                "type": "string",
                "example": "png",
                "description": "Indicates the suffix, when available, on the file. By default,\nset to an empty string. The suffix usually indicates the encoding\n(file format) of the file contents or usage."
              },
              "is_package": {
                "type": "boolean",
                "example": true,
                "description": "Whether the file is a package. Used for Mac Packages used by iWorks."
              },
              "expiring_embed_link": {
                "type": "string",
                "example": "https://app.box.com/preview/expiring_embed/gvoct6FE!",
                "description": "Requesting this field creates an expiring URL for an\nembedded preview session in an iframe.\n\nThis URL will expire after 60 seconds and the session will\nexpire after 60 minutes."
              },
              "watermark_info": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WatermarkInfo"
                  },
                  {
                    "description": "Information about the watermarking on this file"
                  }
                ]
              },
              "allowed_invitee_roles": {
                "type": "array",
                "description": "Folder [collaboration](#collaboration-object) roles allowed by the\nenterprise administrator.",
                "items": {
                  "type": "string"
                },
                "example": [
                  "open"
                ],
                "enum": [
                  "open",
                  "company",
                  "collaborators"
                ]
              },
              "is_externally_owned": {
                "type": "boolean",
                "example": true,
                "description": "Whether this file is owned by a user outside of the enterprise."
              },
              "has_collaborations": {
                "type": "boolean",
                "example": true,
                "description": "Whether this file has any collaborators."
              },
              "metadata": {
                "type": "object",
                "description": "An associative array of metadata objects within their\nscopes.\n\nTo access the metadata for a file, first use the\n[Metadata](#metadata) endpoints to determine\nthe metadata templates available to your enterprise.\n\nThe use the [Retrieve File](#get-file-id) endpoint with\nthe `fields` query parameter to get the metadata by ID. The\nID for the metadata template will be in the format\n`metadata.<scope>.<templatename>`, for example\n`fields=metadata.global.properties`.",
                "example": {
                  "global": {
                    "marketingCollateral": {
                      "$canEdit": true,
                      "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                      "$parent": "folder_59449484661",
                      "$scope": "enterprise_27335",
                      "$template": "blueprintTemplate",
                      "$type": "blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                      "$typeVersion": 2,
                      "$version": 1
                    }
                  }
                },
                "enum": [
                  "global",
                  "enteprise_<:enterprise_id>"
                ],
                "additionalProperties": {
                  "type": "object",
                  "description": "The name of the metadata template",
                  "example": {
                    "marketingCollateral": {
                      "$canEdit": true,
                      "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                      "$parent": "folder_59449484661",
                      "$scope": "enterprise_27335",
                      "$template": "blueprintTemplate",
                      "$type": "blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                      "$typeVersion": 2,
                      "$version": 1
                    }
                  },
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Metadata"
                  }
                }
              }
            }
          }
        ]
      },
      "File--Standard": {
        "x-box-resource-id": "file--standard",
        "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/File--Mini"
          },
          {
            "properties": {
              "sha1": {
                "type": "string",
                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                "description": "The SHA1 hash of the file."
              },
              "description": {
                "type": "string",
                "description": "The description of the file",
                "maxLength": 256,
                "example": "Some pictures I took"
              },
              "size": {
                "type": "integer",
                "description": "The file size in bytes. Be careful parsing this integer, it can\neasily go into [exponent notation](http://en.wikipedia.org/wiki/\\\nDouble-precision_floating-point_format).",
                "example": 629644
              },
              "path_collection": {
                "type": "array",
                "description": "The path of folders to this file, starting at the root",
                "items": {
                  "$ref": "#/components/schemas/Folder--Mini"
                }
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was upload to Box’s servers",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was last updated on the Box servers",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trashed_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was last moved to the trash",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "purged_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file will be permanently deleted",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "content_created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was created originally",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "content_modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was last updated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the file will automatically be deleted",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created this file"
                  }
                ]
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last modified this file"
                  }
                ]
              },
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who owns this file"
                  }
                ]
              },
              "shared_link": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SharedLink"
                  },
                  {
                    "description": "The shared link object for this file. Will be\n`null` if no shared link has been created."
                  }
                ]
              },
              "parent": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Folder--Mini"
                  },
                  {
                    "description": "The folder that contains this file."
                  }
                ]
              },
              "item_status": {
                "type": "string",
                "example": "active",
                "enum": [
                  "active",
                  "trashed",
                  "deleted"
                ],
                "description": "Whether this item is deleted or not. Values include `active`,\n`trashed` if the file has been moved to the trash, and `deleted` if\nthe file has been permanently deleted"
              }
            }
          }
        ]
      },
      "File--Mini": {
        "x-box-resource-id": "file--mini",
        "description": "A mini representation of a file, used when\nnested under another resource.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "properties": {
              "sequence_id": {
                "type": "string",
                "example": "1",
                "description": "A unique ID for use with the /events endpoint"
              },
              "etag": {
                "type": "string",
                "example": "1",
                "description": "The entity tag of this file object. Used with `If-Match`\nheaders."
              },
              "name": {
                "type": "string",
                "description": "The name of the file",
                "example": "Pictures"
              }
            }
          }
        ]
      },
      "FileScope": {
        "x-box-resource-id": "file_scope",
        "description": "A relation between a file and the scopes for which the file can be accessed",
        "properties": {
          "scope": {
            "type": "string",
            "description": "The file scopes for the file access",
            "example": "item_download",
            "enum": [
              "annotation_edit",
              "annotation_view_all",
              "annotation_view_self",
              "base_explorer",
              "base_picker",
              "base_preview",
              "base_upload",
              "item_delete",
              "item_download",
              "item_preview",
              "item_rename",
              "item_share",
              null
            ]
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File--Mini"
              },
              {
                "description": "The file for which the file can be accessed"
              }
            ]
          }
        }
      },
      "FileVersion": {
        "x-box-resource-id": "file_version",
        "x-box-reference-category": "file_versions",
        "description": "A full representation of a file version",
        "allOf": [
          {
            "$ref": "#/components/schemas/FileVersion--Mini"
          },
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the file version",
                "example": "tigers.jpeg"
              },
              "size": {
                "type": "integer",
                "format": "int64",
                "description": "Size of the file version in bytes",
                "example": 629644
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the file version object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the file version object was last updated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last updated the file version"
                  }
                ]
              },
              "trashed_at": {
                "type": "string",
                "description": "When the file version object was trashed.",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "purged_at": {
                "type": "string",
                "description": "When the file version object was purged.",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "FileVersions": {
        "x-box-resource-id": "file_versions",
        "description": "A list of file versions",
        "x-box-reference-category": "file_versions",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileVersion"
                }
              }
            }
          }
        ]
      },
      "FileVersion--Mini": {
        "x-box-resource-id": "file_version--mini",
        "description": "A mini representation of a file version, used when\nnested under another resource.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "sha1": {
                "type": "string",
                "description": "The SHA1 hash of this file.",
                "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
              }
            }
          }
        ]
      },
      "FileVersionRetention": {
        "x-box-resource-id": "file_version_retention",
        "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can apply policies to\nspecified folders, or an entire enterprise. A file version retention\nis a  record for a retained file version. To use this feature,\nyou must  have the manage retention policies scope enabled for your\nAPI key via  your application management console. For more information\nabout retention policies, please visit our help documentation",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "file_version": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileVersion--Mini"
                  },
                  {
                    "description": "The file version this file version retention was\napplied to"
                  }
                ]
              },
              "file": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file this file version retention was applied to"
                  }
                ]
              },
              "applied_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file version retention object was\ncreated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "disposition_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention period expires on this file\nversion retention",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "winning_retention_policy": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetentionPolicy--Mini"
                  },
                  {
                    "description": "The winning retention policy applied to this file\nversion retention. A file version can have multiple\nretention policies applied."
                  }
                ]
              }
            }
          }
        ]
      },
      "Folder": {
        "x-box-resource-id": "folder",
        "description": "A full representation of a folder, as can be returned from any\nfolder API endpoints by default",
        "x-box-reference-category": "folders",
        "allOf": [
          {
            "$ref": "#/components/schemas/Folder--Standard"
          },
          {
            "properties": {
              "sync_state": {
                "type": "string",
                "example": "synced",
                "description": "If Box Sync or Box Drive is allowed to sync this folder.",
                "enum": [
                  "synced",
                  "not_synced"
                ]
              },
              "has_collaborations": {
                "type": "boolean",
                "example": true,
                "description": "If this folder has any collaborators."
              },
              "permissions": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Permissions"
                  },
                  {
                    "description": "The permissions that the current user has\nfor this item"
                  }
                ]
              },
              "tags": {
                "type": "array",
                "example": [
                  "approved"
                ],
                "items": {
                  "type": "string"
                },
                "description": "The tags for this item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update them using this field."
              },
              "can_non_owners_invite": {
                "type": "boolean",
                "example": true,
                "description": "If collaborators who are not\nfolder owners can invite new collaborators"
              },
              "is_externally_owned": {
                "type": "boolean",
                "example": true,
                "description": "If this folder is owned by a user outside of the enterprise."
              },
              "is_collaboration_restricted_to_enterprise": {
                "type": "boolean",
                "example": true,
                "description": "If future invites to this folder are restricted to users\nwithin the enterprise. This does not affect existing\ncollaborations."
              },
              "allowed_shared_link_access_levels": {
                "type": "array",
                "example": [
                  "open"
                ],
                "items": {
                  "type": "string"
                },
                "enum": [
                  "open",
                  "company",
                  "collaborators"
                ],
                "description": "The default access level settings for shared links as set\nby the administrator."
              },
              "allowed_invitee_roles": {
                "type": "array",
                "example": [
                  "open"
                ],
                "enum": [
                  "open",
                  "company",
                  "collaborators"
                ],
                "description": "The types of collaborations that have been allowed by the\nenterprise administrator.",
                "items": {
                  "type": "string"
                }
              },
              "watermark_info": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WatermarkInfo"
                  },
                  {
                    "description": "Information about the watermarking on this folder"
                  }
                ]
              }
            }
          }
        ]
      },
      "Folder--Standard": {
        "x-box-resource-id": "folder--standard",
        "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Folder--Mini"
          },
          {
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the folder was created.  May be `null` for some folders such\nas root or trash.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "description": {
                "type": "string",
                "description": "The description of the folder",
                "maxLength": 256,
                "example": "Some pictures I took"
              },
              "size": {
                "type": "integer",
                "format": "int64",
                "description": "The folder size in bytes.\n\nBe careful parsing this integer as it can easily\ngo into exponent notation.",
                "example": 629644
              },
              "path_collection": {
                "type": "array",
                "description": "The tree of folders that this folder is contained in,\nstarting at the root.",
                "items": {
                  "$ref": "#/components/schemas/Folder--Mini"
                }
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created this folder"
                  }
                ]
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last modified this folder."
                  }
                ]
              },
              "trashed_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which this folder was put in the trash.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "purged_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which this folder will be purged from the trash.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "content_created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time at which this folder was originally created according\nto the uploader.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "content_modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the folder or its contents were last modified according to\nthe uploader.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time and which the folder will be automatically be deleted.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who owns this folder."
                  }
                ]
              },
              "shared_link": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SharedLink"
                  },
                  {
                    "description": "The shared link object for this folder. Will be\n`null` if no shared link has been created."
                  }
                ]
              },
              "folder_upload_email": {
                "type": "object",
                "properties": {
                  "access": {
                    "type": "string",
                    "example": "open",
                    "enum": [
                      "open",
                      "collaborators"
                    ],
                    "description": "If set, users can email files to the automatically\ncreated email address to upload files to the\nfolder. To get the email address, request the\n`folder_upload_email` field for the folder after setting\nthis field.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted."
                  },
                  "email": {
                    "description": "The upload email address for this folder. This will be\n`null` if not enabled.",
                    "type": "string",
                    "format": "email",
                    "example": "upload.Picture.k13sdz1@u.box.com"
                  }
                }
              },
              "parent": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Folder--Mini"
                  },
                  {
                    "description": "The direct parent folder that this folder is located within.\n\nMay be `null` for folders such as root, trash and child folders\nwhose parent is inaccessible."
                  }
                ]
              },
              "item_status": {
                "type": "string",
                "description": "Whether this item is deleted or not.\n\nValues include `active` if the item has not been trashed,\n`trashed` if the item has been moved to the trash, and\n`deleted` if the item has been permanently deleted.",
                "enum": [
                  "active",
                  "trashed",
                  "deleted"
                ],
                "example": "active"
              },
              "item_collection": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Item"
                },
                "description": "A collection of mini file and folder objects contained in this folder."
              }
            }
          }
        ]
      },
      "Folder--Mini": {
        "x-box-resource-id": "folder--mini",
        "description": "A mini representation of a file version, used when\nnested under another resource.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "properties": {
              "sequence_id": {
                "type": "string",
                "example": "1",
                "description": "A unique ID for use with the `/events` endpoint. May be `null` for\nsome folders, such as root or trash."
              },
              "etag": {
                "type": "string",
                "example": "1",
                "description": "The entity tag of this folder object. Used with `If-Match`\nheaders."
              },
              "name": {
                "type": "string",
                "description": "The name of the folder.",
                "example": "Pictures"
              }
            }
          }
        ]
      },
      "FolderUploadEmail": {
        "x-box-resource-id": "folder_upload_email",
        "type": "object",
        "description": "The writable Folder Upload Email object",
        "properties": {
          "access": {
            "type": "string",
            "example": "open",
            "enum": [
              "open",
              "collaborators"
            ],
            "description": "If set, users can email files to the automatically\ncreated email address to upload files to the\nfolder. To get the email address, request the\n`folder_upload_email` field for the folder after setting\nthis field.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted."
          }
        }
      },
      "Group": {
        "x-box-resource-id": "group",
        "x-box-reference-category": "groups",
        "description": "Groups contain a set of users, and can be used in place of\nusers in some operations, such as collaborations.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Group--Standard"
          },
          {
            "properties": {
              "provenance": {
                "type": "string",
                "description": "Keeps track of which external source this group is\ncoming from (e.g. \"Active Directory\", \"Google Groups\",\n\"Facebook Groups\").  Setting this will\nalso prevent Box users from editing the group name\nand its members directly via the Box web application.\nThis is desirable for one-way  syncing of groups.",
                "maxLength": 255,
                "example": "Active Directory"
              },
              "external_sync_identifier": {
                "type": "string",
                "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group. Example values of this field\ncould be an Active Directory Object ID or a Google\nGroup ID.  We recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems.",
                "example": "AD:123456"
              },
              "description": {
                "type": "string",
                "description": "Human readable description of the group.",
                "maxLength": 255,
                "example": "Support Group - as imported from Active Directory"
              },
              "invitability_level": {
                "type": "string",
                "example": "admins_only",
                "description": "Specifies who can invite the group to collaborate\non folders (Create Collaboration).\n\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\n\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\n\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group.",
                "enum": [
                  "admins_only",
                  "admins_and_members",
                  "all_managed_users"
                ]
              },
              "member_viewability_level": {
                "type": "string",
                "example": "admins_only",
                "description": "Specifies who can view the members of the group\n(Get Memberships for Group).\n\n* `admins_only - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise",
                "enum": [
                  "admins_only",
                  "admins_and_members",
                  "all_managed_users"
                ]
              }
            }
          }
        ]
      },
      "Groups": {
        "x-box-resource-id": "groups",
        "x-box-reference-category": "groups",
        "description": "A list of groups.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        ]
      },
      "Group--Standard": {
        "x-box-resource-id": "group--standard",
        "description": "A standard representation of a group, as returned from any\ngroup API endpoints by default",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Group--Mini"
          },
          {
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the group object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the group object was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Group--Mini": {
        "x-box-resource-id": "group--mini",
        "type": "object",
        "description": "Mini representation of a group, including id and name of\ngroup.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the group",
                "example": "Support"
              }
            }
          }
        ]
      },
      "GroupMembership": {
        "x-box-resource-id": "group_membership",
        "description": "Membership is used to signify that a user is part of a\ngroup.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "user": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user that the membership applies to"
                  }
                ]
              },
              "group": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Group--Mini"
                  },
                  {
                    "description": "The group that the membership applies to"
                  }
                ]
              },
              "role": {
                "type": "string",
                "example": "member",
                "description": "The role of the user in the group.",
                "enum": [
                  "member",
                  "admin"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this membership was created.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this membership was last modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Invite": {
        "x-box-resource-id": "invite",
        "description": "An invite for a user to an enterprise.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "invited_to": {
                "$ref": "#/components/schemas/Enterprise"
              },
              "actionable_by": {
                "$ref": "#/components/schemas/User--Mini"
              },
              "invited_by": {
                "$ref": "#/components/schemas/User--Mini"
              },
              "status": {
                "description": "The status of the invite",
                "type": "string",
                "example": "pending"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the invite was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the invite was modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Item": {
        "x-box-resource-id": "item_reference",
        "description": "A generic mini representation of a file, folder, user or enterprise",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "sequence_id": {
                "type": "string",
                "example": "1",
                "description": "A unique ID for use with the `/events` endpoint. May be `null` for\nsome items, such as root or trash."
              },
              "etag": {
                "type": "string",
                "example": "1",
                "description": "The entity tag of this item. Used with If-Match headers.\nMay be `null` for some folders such as root or trash."
              },
              "name": {
                "type": "string",
                "description": "The name of the item.",
                "example": "Pictures"
              }
            }
          }
        ]
      },
      "Items": {
        "x-box-resource-id": "item_references",
        "description": "A list of generic mini representations of a file, folder, user or enterprise",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        ]
      },
      "LegalHold": {
        "x-box-resource-id": "file_version_legal_hold",
        "description": "File-Version-Legal-Hold is an entity representing all\nholds on a File Version.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "file_version": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileVersion--Mini"
                  },
                  {
                    "description": "The file version that is held"
                  }
                ]
              },
              "file": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file for the file version held.\nNote that there is no guarantee that the current\nversion of this file is held."
                  }
                ]
              },
              "legal_hold_policy_assignments": {
                "description": "List of assignments contributing to this Hold.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LegalHoldPolicyAssignment"
                }
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "description": "Time that this File-Version-Legal-Hold was\ndeleted.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "LegalHoldPolicy": {
        "x-box-resource-id": "legal_hold_policy",
        "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LegalHoldPolicy--Mini"
          },
          {
            "properties": {
              "policy_name": {
                "type": "string",
                "example": "Policy 4",
                "description": "Name of the legal hold policy.",
                "maxLength": 254
              },
              "description": {
                "type": "string",
                "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit.",
                "maxLength": 500,
                "example": "Postman created policy"
              },
              "status": {
                "type": "string",
                "example": "active",
                "enum": [
                  "active",
                  "applying",
                  "releasing",
                  "released"
                ],
                "description": "* 'active' - the policy is not in a transition state\n* 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active"
              },
              "assignment_counts": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssignmentCounts"
                  },
                  {
                    "description": "Counts of assignments within this policy by apply-to type"
                  }
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the legal hold policy object"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal hold policy object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal hold policy object was modified.\nDoes not update when assignments are added or removed.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the policy release request was sent. (Because\nit can take time for a policy to fully delete, this\nisn't quite the same time that the policy is fully deleted).\n\nIf `null`, the policy was not deleted.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "filter_started_at": {
                "type": "string",
                "format": "date-time",
                "description": "User-specified, optional date filter applies to\nCustodian assignments only",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "filter_ended_at": {
                "type": "string",
                "format": "date-time",
                "description": "User-specified, optional date filter applies to\nCustodian assignments only",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "release_notes": {
                "type": "string",
                "example": "Example",
                "description": "Optional notes about why the policy was created.",
                "maxLength": 500
              }
            }
          }
        ]
      },
      "LegalHoldPolicy--Mini": {
        "x-box-resource-id": "legal_hold_policy--mini",
        "description": "A mini legal hold policy",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {}
          }
        ]
      },
      "LegalHoldPolicyAssignment": {
        "x-box-resource-id": "legal_hold_policy_assignment",
        "description": "Legal Hold Assignments are used to assign Legal Hold\nPolicies to Users, Folders, Files, or File Versions.\n\nCreating a Legal Hold Assignment puts a hold\non the File-Versions that belong to the Assignment's\n'apply-to' entity.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "legal_hold_policy": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LegalHoldPolicy--Mini"
                  },
                  {
                    "description": "The policy that the legal hold policy assignment\nis part of"
                  }
                ]
              },
              "assigned_to": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "description": "The entity that the legal hold policy assignment\nis assigned to. Includes type and ID."
                  }
                ]
              },
              "assigned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the legal hold policy\nassignment"
                  }
                ]
              },
              "assigned_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal hold policy assignment object was\ncreated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the assignment release request was sent.\n(Because it can take time for an assignment to fully\ndelete, this isn't quite the same time that the\nassignment is fully deleted). If null, Assignment\nwas not deleted.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Lock": {
        "x-box-resource-id": "lock",
        "description": "The lock held on a file.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The use who created the lock"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "The time this lock was created at"
              },
              "expired_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "The time this lock is to expire at, which might be in the past"
              },
              "is_download_prevented": {
                "type": "boolean",
                "example": true,
                "description": "Whether or not the file can be downloaded while locked"
              }
            }
          }
        ]
      },
      "Lock--Writable": {
        "x-box-resource-id": "lock--writable",
        "type": "object",
        "description": "Defines a lock on an item",
        "x-box-reference-hide": true,
        "required": [
          "access"
        ],
        "properties": {
          "access": {
            "type": "string",
            "description": "The type of this item, should be `lock`.",
            "enum": [
              "lock"
            ],
            "example": "lock"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-12-12T10:53:43-08:00",
            "description": "The time at which the lock expires"
          },
          "is_download_prevented": {
            "type": "boolean",
            "example": true,
            "description": "Whether the file can be downloaded while locked"
          }
        }
      },
      "MarkerPagination": {
        "x-box-resource-id": "marker_pagination",
        "description": "The part of an API response that describes marker\nbased pagination",
        "properties": {
          "limit": {
            "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
            "example": 1000,
            "type": "integer",
            "format": "int64"
          },
          "next_marker": {
            "description": "The marker for the start of the next page of results.",
            "example": 3000,
            "type": "integer",
            "format": "int64"
          },
          "prev_marker": {
            "description": "The marker for the start of the previous page of results.",
            "example": 1000,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Metadata": {
        "x-box-resource-id": "metadata",
        "description": "A piece of metadata as specified by a metadata template and\napplied to a file or folder.",
        "x-box-reference-category": "metadata",
        "properties": {
          "$canEdit": {
            "type": "boolean",
            "example": true,
            "description": "Whether the user can edit this metadata"
          },
          "$id": {
            "type": "string",
            "format": "uuid",
            "example": "01234500-12f1-1234-aa12-b1d234cb567e",
            "description": "36-character UUID to identify the metadata object"
          },
          "$parent": {
            "type": "string",
            "example": "folder_59449484661,",
            "description": "An ID for the parent folder"
          },
          "$scope": {
            "type": "string",
            "example": "enterprise_27335",
            "description": "An ID for the scope in which this template\nhas been applied"
          },
          "$template": {
            "type": "string",
            "example": "blueprintTemplate",
            "description": "The name of the template"
          },
          "$type": {
            "type": "string",
            "example": "blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
            "description": "A unique identifier for the \"type\" of this instance. This is an internal\nsystem property and should not be used by a client application."
          },
          "$typeVersion": {
            "type": "integer",
            "example": 2,
            "description": "The last-known version of the template of the object. This is an internal\nsystem property and should not be used by a client application."
          },
          "$version": {
            "type": "integer",
            "example": 1,
            "description": "The version of the metadata object. Starts at 0 and increases every time\na user-defined property is modified."
          }
        }
      },
      "Metadatas": {
        "x-box-resource-id": "metadatas",
        "description": "A list of metadata",
        "x-box-reference-category": "metadata",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "MetadataPatchItem": {
        "x-box-resource-id": "metadata-patch-item",
        "type": "object",
        "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a\nchange to make to the metadata.",
        "properties": {
          "op": {
            "type": "string",
            "example": "add",
            "enum": [
              "add",
              "replace",
              "remove",
              "test",
              "move",
              "copy"
            ],
            "description": "The operation type"
          },
          "path": {
            "type": "string",
            "example": "/currentState",
            "description": "The location in the metadata JSON object\nto apply the changes to, in the format of a\n[JSON-Pointer](https://tools.ietf.org/html/rfc6901).\n\nThe path must always be prefixed with a `/`.\n\nSpecial characters `~` and `/` in the key must be escaped\nto ensure the operation can be executed as intended."
          },
          "value": {
            "type": "string",
            "example": "reviewed",
            "description": "The value to be set or tested.\n\nRequired for `add`, `replace`, and `test` operations.\n\nFor `add`, if the value exists already the previous value will be\noverwritten by the new value.\n\nFor `replace`, the value must exist before replacing.\n\nFor `test`, the existing value at the `path` location must match\nthe specified value."
          },
          "from": {
            "type": "string",
            "example": "/nextState",
            "description": "Required for `move` or `copy`.\n\nThe location in the metadata JSON object to move or copy from,\nin the format of a\n[JSON-Pointer](https://tools.ietf.org/html/rfc6901)."
          }
        }
      },
      "MetadataCascadePolicy": {
        "x-box-resource-id": "metadata_cascade_policy",
        "description": "A cascade policy that applies to metadata policy template\nto a folder",
        "properties": {
          "id": {
            "type": "string",
            "example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
            "description": "The ID of the metadata cascade policy object"
          },
          "owner_enterprise": {
            "type": "object",
            "description": "The enterprise that owns the policy.",
            "properties": {
              "type": {
                "type": "string",
                "example": "`enterprise`",
                "description": "`enterprise`"
              },
              "id": {
                "type": "string",
                "example": "690678",
                "description": "The ID of the enterprise that owns the policy."
              }
            }
          },
          "parent": {
            "type": "object",
            "description": "Represent the folder the policy is applied to",
            "properties": {
              "type": {
                "type": "string",
                "example": "`folder`",
                "description": "`folder`"
              },
              "id": {
                "type": "string",
                "example": "690678",
                "description": "The ID of the folder the policy is applied to"
              }
            }
          },
          "scope": {
            "type": "string",
            "example": "global",
            "description": "The scope of the target instance that will be cascaded down. The `scope`\nand `templateKey` together identify the metadata on the folder that is\nto be cascaded down. Today, only `global` and `enterprise_*` scopes are\nsupported."
          },
          "templateKey": {
            "type": "string",
            "example": "demo",
            "description": "The template key of the target metadata template to cascade down.\nThe `scope` & `templateKey` together identify the metadata on the f\nolder that is to be cascaded down."
          }
        }
      },
      "MetadataFilter": {
        "x-box-resource-id": "metadata_filter",
        "description": "A metadata filter used for searching by metadata\ntemplate",
        "type": "object",
        "properties": {
          "scope": {
            "description": "Specifies the scope of the template to search for.",
            "type": "string",
            "example": "global",
            "enum": [
              "global",
              "enterprise"
            ]
          },
          "templateKey": {
            "description": "The key name of the template to search for. Only\none template name can be specified per filter.",
            "type": "string",
            "example": "marketingCollateral"
          },
          "filters": {
            "type": "object",
            "description": "Additional key/value pairs for the template to search for.\n\nFor floats and dates, you can include an (inclusive) upper\nbound parameter `lt` or (inclusive) lower bound parameter\n`gt`, or both.\n\nAn example filter for a `“contractExpiration”` on or before\n`08-01-16 UTC` would be listed as follow.\n\n`{\"contractExpiration\":{\"lt\":\"2016-08-01T00:00:00Z\"}}`",
            "example": {
              "documentType": "datasheet"
            },
            "additionalProperties": {
              "description": "The value for the custom field",
              "example": "datasheet",
              "type": "string"
            }
          }
        }
      },
      "MetadataTemplate": {
        "x-box-resource-id": "metadata_template",
        "x-box-reference-category": "metadata_templates",
        "description": "A template for metadata that can be applied to files and folders",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetadataTemplate--Writable"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "example": "f7a9891f",
                "description": "The ID of the template"
              }
            }
          }
        ]
      },
      "MetadataTemplates": {
        "x-box-resource-id": "metadata_templates",
        "description": "A list of metadata templates",
        "x-box-reference-category": "metadata_templates",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetadataTemplate"
                }
              }
            }
          }
        ]
      },
      "MetadataTemplate--Writable": {
        "x-box-resource-id": "metadata_template--writable",
        "description": "The writable parts of a metadata template that can be\napplied to files and folders",
        "properties": {
          "scope": {
            "type": "string",
            "description": "The scope of the object. `global` and `enterprise_*` scopes are supported.\n\nThe `global` scope contains the template with a key of `properties`,\nwhile the enterprise scope pertains to custom templates created within\nthe enterprise.\n\n The ID of the enterprise will be appended to the enterprise scope.",
            "example": "enterprise_123456"
          },
          "templateKey": {
            "type": "string",
            "example": "productInfo",
            "description": "A unique identifier for the template. The identifier must be unique across\nthe scope of the enterprise to which the metadata template is being\napplied.",
            "maxLength": 64,
            "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$"
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the template",
            "maxLength": 4096,
            "example": "Product Info"
          },
          "hidden": {
            "type": "boolean",
            "example": true,
            "description": "Whether this template is hidden in the UI",
            "default": false
          },
          "fields": {
            "type": "array",
            "description": "The ordered set of key:value pairs for the template.",
            "items": {
              "$ref": "#/components/schemas/MetadataTemplateField"
            }
          }
        }
      },
      "MetadataTemplateField": {
        "x-box-resource-id": "metadata_template_field",
        "description": "An ordered set of key-value pairs that are part of a\nmetadata template",
        "properties": {
          "type": {
            "type": "string",
            "example": "string",
            "description": "The data type of the field's value",
            "enum": [
              "string",
              "enum",
              "float",
              "date"
            ]
          },
          "key": {
            "type": "string",
            "example": "category",
            "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs.",
            "maxLength": 256
          },
          "displayName": {
            "type": "string",
            "example": "Category",
            "description": "The display name of the field.",
            "maxLength": 4096
          },
          "description": {
            "type": "string",
            "example": "The category",
            "description": "A description of the field.",
            "maxLength": 4096
          },
          "hidden": {
            "type": "boolean",
            "example": true,
            "description": "Whether this template is hidden in the UI"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataTemplateFieldOption"
            }
          }
        }
      },
      "MetadataTemplateFieldOption": {
        "x-box-resource-id": "metadata_template_field_option",
        "description": "For type `enum` and `multiSelect`, one of the potential values\nthat can be selected",
        "properties": {
          "id": {
            "type": "string",
            "example": "f7a9895f",
            "description": "The ID of the option"
          },
          "key": {
            "description": "The text value of the option",
            "example": "category1",
            "type": "string"
          }
        }
      },
      "MetadataTemplatePatch": {
        "x-box-resource-id": "metadata-template-patch",
        "description": "A patch specification for the changes to make to the metadata template.\nThe changes are represented as a JSON array of operation objects.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MetadataTemplatePatchItem"
        }
      },
      "MetadataTemplatePatchItem": {
        "x-box-resource-id": "metadata-template-patch-item",
        "type": "object",
        "description": "A patch operation for the\nchanges to make to the metadata template.\n\nThe possible operations are as follows.\n\n* `addEnumOption` Adds an enum option at the\n  end of the enum option list for the specified ``fieldKey`.\n\n  Example `{\"op\":\"addEnumOption\",\"fieldKey\":\"category\",\n  \"data\":{\"key\":\"New Option\"}}`\n\n* `addField` Adds a field at the end of the field list\n  for the template.\n\n  Example `{\"op\":\"addField\",\"data\":{\"displayName\":\"Category\",\n  \"key\":\"category\",\"hidden\":false,\"type\":\"string\"}}`.\n\n* `editTemplate` Allows for editing the base properties\n  of a template, mainly the `displayName` and `hidden`\n  properties.\n\n  Example `{\"op\":\"editTemplate\",\"data\":{\"displayName\":\"Client\"}}`.\n\n* `reorderEnumOptions` Reorders the enum option list to\n  match the requested enum option list.\n\n  Example `{\"op\":\"reorderEnumOptions\",\"fieldKey\":\"category\",\n  \"enumOptionKeys\":[\"option2\",\"option1\",\"option3\"]}`\n\n* `reorderFields`  Reorders the field list to match the requested\n  field list\n\n  Example `{\"op\":\"reorderFields\",\"fieldKeys\":[\"field2\",\"field1\",\"field3\"]}`\n\nThe following changes can affect existing instances of this template.\n\n* `editField` Edits any number of the base properties of a field, mainly\n  the `displayName`, `hidden`, `description`, and `key` properties.\n\n  If the key is changed, existing values of the specified field are\n  migrated to the new key. Search indexes are updated, which can take\n  time depending on how many files are affected by the change.\n\n  Example `{\"op\":\"editField\",\"fieldKey\":\"category\",\n  \"data\":{\"displayName\":\"Customer Group\"}}`\n\n* `editEnumOption` Edits one of the options of an enum field.\n\n  Example `{\"op\":\"editEnumOption\",\"fieldKey\":\"years\",\"enumOptionKey\":\"2011\",\n  \"data\":{\"key\":\"2020\"}}`\n\n* `removeEnumOption` Removes the specified enum option from the\n  specified enum field.\n\n  Example `{\"op\":\"removeEnumOption\",\"fieldKey\":\"years\",\n  \"enumOptionKey\":\"2011\"}`\n\n* `removeField` Removes the specified field from the template.\n\n  Example `{\"op\":\"removeField\",\"fieldKey\":\"brand\"}`",
        "properties": {
          "op": {
            "type": "string",
            "example": "addEnumOption",
            "enum": [
              "addEnumOption",
              "addField",
              "editTemplate",
              "reorderEnumOptions",
              "reorderFields",
              "editField",
              "editEnumOption",
              "removeEnumOption",
              "removeField"
            ],
            "description": "The operation type to perform on the template."
          },
          "data": {
            "description": "The data for the operation. Can vary depending on the operation.",
            "example": {
              "displayName": "New name"
            },
            "additionalProperties": {
              "type": "string",
              "example": "New name"
            }
          },
          "fieldKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "category",
              "name"
            ],
            "description": "For operations that affect multiple fields, the keys of the\nfields to be affected."
          },
          "enumOptionKeys": {
            "description": "For operations that affect multiple enum options,\nthe keys of the enum options to be affected.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "option1",
              "option2",
              "option3"
            ]
          }
        }
      },
      "OAuth2Error": {
        "x-box-resource-id": "oauth2_error",
        "description": "An OAuth2 error",
        "properties": {
          "error": {
            "type": "string",
            "example": "invalid_client",
            "description": "The type of the error returned."
          },
          "error_description": {
            "type": "string",
            "example": "The client credentials are invalid",
            "description": "The type of the error returned."
          }
        }
      },
      "Owner": {
        "x-box-resource-id": "owner",
        "description": "The owner of this item",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123456",
            "description": "The ID of user that owns this item."
          }
        }
      },
      "Pagination": {
        "x-box-resource-id": "pagination",
        "description": "The part of an API response that describes pagination",
        "properties": {
          "total_count": {
            "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.",
            "example": 5000,
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
            "example": 1000,
            "type": "integer",
            "format": "int64"
          },
          "offset": {
            "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.",
            "example": 2000,
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "description": "The order by which items are returned",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginationOrder"
            }
          }
        }
      },
      "PaginationOrder": {
        "x-box-resource-id": "pagination_order",
        "description": "The order in which a pagination is ordered",
        "properties": {
          "by": {
            "description": "The field to order by",
            "example": "type",
            "type": "string"
          },
          "direction": {
            "type": "string",
            "description": "The direction to order by, either ascending or descending",
            "example": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "Parent": {
        "x-box-resource-id": "parent",
        "description": "The parent for this item",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of parent item",
            "example": "123"
          }
        }
      },
      "Permissions": {
        "x-box-resource-id": "permissions",
        "description": "The part of an API response that describes permissions",
        "properties": {
          "can_access": {
            "type": "boolean",
            "description": "Whether the current user can access the item",
            "example": true
          },
          "can_upload": {
            "type": "boolean",
            "description": "Whether the current user can upload to the item",
            "example": true
          },
          "can_rename": {
            "type": "boolean",
            "description": "Whether the current user can rename the item",
            "example": true
          },
          "can_delete": {
            "type": "boolean",
            "description": "Whether the current user can delete the item",
            "example": true
          },
          "can_share": {
            "type": "boolean",
            "description": "Whether the current user can share the item",
            "example": true
          },
          "can_invite_collaborator": {
            "type": "boolean",
            "description": "Whether the current user can invite collaborators to the item",
            "example": true
          },
          "can_set_share_access": {
            "type": "boolean",
            "description": "Whether the current user can set share permissions for the item",
            "example": true
          }
        }
      },
      "RecentItem": {
        "x-box-resource-id": "recent_item",
        "description": "Recent Items returns information about files that have\nbeen accessed by a user recently. It keeps track of items\nthat were accessed either in the last 90 days or the last\n1000 items accessed",
        "properties": {
          "type": {
            "type": "string",
            "description": "`recent_item`",
            "example": "recent_item"
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Item"
              },
              {
                "description": "The item that was recently accessed."
              }
            ]
          },
          "interaction_type": {
            "type": "string",
            "example": "item_preview",
            "description": "The most recent type of access the user performed on\nthe item.",
            "enum": [
              "item_preview",
              "item_upload",
              "item_comment",
              "item_open",
              "item_modify"
            ]
          },
          "interacted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time of the most recent interaction.",
            "example": "2018-04-13T13:53:23-07:00"
          },
          "interaction_shared_link": {
            "type": "string",
            "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
            "description": "If the item was accessed through a shared link it will appear here,\notherwise this will be null."
          }
        }
      },
      "Reference": {
        "x-box-resource-id": "reference",
        "description": "The bare basic reference for an object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object",
            "example": "11446498"
          },
          "type": {
            "type": "string",
            "description": "The type of object, defaults to `folder`",
            "example": "file",
            "enum": [
              "folder",
              "file",
              "user",
              "file_version",
              "lock",
              "collaboration",
              "comment",
              "task",
              "web_link",
              "collection",
              "task_assignment",
              "event",
              "realtime_server",
              "webhook_event",
              "webhook",
              "enterprise",
              "invite",
              "email_alias",
              "group",
              "group_membership",
              "device_pinner",
              "retention_policy",
              "retention_policy_assignment",
              "file_version_retention",
              "legal_hold_policy",
              "legal_hold_policy_assignment",
              "legal_hold",
              "upload_session"
            ]
          }
        }
      },
      "RetentionPolicy": {
        "x-box-resource-id": "retention_policy",
        "title": "Retention Policy Object",
        "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RetentionPolicy--Mini"
          },
          {
            "properties": {
              "policy_type": {
                "type": "string",
                "example": "finite",
                "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown.",
                "enum": [
                  "finite",
                  "indefinite"
                ]
              },
              "retention_length": {
                "type": "string",
                "example": "0",
                "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
              },
              "disposition_action": {
                "type": "string",
                "example": "permanently_delete",
                "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy time period has passed.",
                "enum": [
                  "permanently_delete",
                  "remove_retention"
                ]
              },
              "status": {
                "type": "string",
                "example": "active",
                "description": "The status of the retention policy. The status of\na policy will be `active`, unless explicitly retired by an\nadministrator, in which case the status will be `retired`.\nOnce a policy has been retired, it cannot become\nactive again.",
                "enum": [
                  "active",
                  "retired"
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "A mini user object representing the user that\ncreated the retention policy"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention policy object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention policy object was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "RetentionPolicy--Mini": {
        "x-box-resource-id": "retention_policy--mini",
        "description": "Mini representation of the retention policy",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "policy_name": {
                "type": "string",
                "description": "The name given to the retention policy",
                "example": "Some Policy Name"
              }
            }
          }
        ]
      },
      "RetentionPolicyAssignment": {
        "x-box-resource-id": "retention_policy_assignment",
        "description": "The retention policy assignment endpoint provides a way\nfor admins to apply a retention policy on a per-folder\nbasis, or place a blanket policy over the entire\nenterprise.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "retention_policy": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetentionPolicy--Mini"
                  },
                  {
                    "description": "A mini retention policy object representing the\nretention policy that has been assigned to this content"
                  }
                ]
              },
              "assigned_to": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Folder--Mini"
                      },
                      {
                        "$ref": "#/components/schemas/Enterprise"
                      }
                    ]
                  },
                  {
                    "description": "The `type` and `id` of the content that is under\nretention. The `type` can either be `folder` or `\nenterprise`."
                  }
                ]
              },
              "assigned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "A mini user object representing the user that\ncreated the retention policy assignment object"
                  }
                ]
              },
              "assigned_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention policy assignment object was\ncreated",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "SharedLink": {
        "x-box-resource-id": "shared_link",
        "description": "Shared links provide direct, read-only access to files or folder on Box\nusing a URL. Shared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriate authenticated Box users.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL to access the item on Box.  If entered in a browser, this URL will\ndisplay the item in Box's preview UI.  If a custom URL is set this field\nwill return the custom URL, but the original URL will also continue to\nwork.",
            "example": "https://www.box.com/s/vspke7y05sb214wjokpk"
          },
          "download_url": {
            "type": "string",
            "description": "The \"direct Link\" URL to download the item.  If entered in a browser, this\nURL will trigger a download of the item.  This URL includes the file\nextension so that the file will be saved with the right file type.",
            "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg"
          },
          "vanity_url": {
            "type": "string",
            "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application.",
            "example": "https://acme.app.box.com/v/my_url/"
          },
          "access": {
            "type": "string",
            "description": "The access level specified when the shared link was created. Can be `open`\n(\"People with the link\"), `company` (\"People in your company\"), or\n`collaborators` (\"People in this folder\").  When creating a shared link,\nif you omit this field then the access level will be set to the default\naccess level specified by the enterprise admin.",
            "enum": [
              "open",
              "company",
              "collaborators"
            ],
            "example": "open"
          },
          "effective_access": {
            "type": "string",
            "description": "The effective access level for the shared link.  This can be lower than\nthe value in the `access` field if the enterprise settings restrict the\nallowed access levels.",
            "enum": [
              "open",
              "company",
              "collaborators"
            ],
            "example": "company"
          },
          "unshared_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date-time that this link will become disabled. This field can only be\nset by users with paid accounts.",
            "example": "2018-04-13T13:53:23-07:00"
          },
          "is_password_enabled": {
            "type": "boolean",
            "description": "Whether the shared link has a password set",
            "example": true
          },
          "permissions": {
            "type": "object",
            "properties": {
              "can_download": {
                "type": "boolean",
                "example": true,
                "description": "Whether the shared link allows downloads.  For shared links on\nfolders, this also applies to any items in the folder. Can only be set\nwith access levels `open` and `company` (not `collaborators`)."
              },
              "can_preview": {
                "type": "boolean",
                "example": true,
                "description": "Whether the shared link allows previewing.  Always `true`.  For shared\nlinks on folders, this also applies to any items in the folder."
              }
            }
          },
          "download_count": {
            "type": "integer",
            "example": 3,
            "description": "The number of times the item has been downloaded"
          },
          "preview_count": {
            "type": "integer",
            "example": 3,
            "description": "The number of times the item has been previewed"
          }
        }
      },
      "SharedLink--Writable": {
        "x-box-resource-id": "shared_link--writable",
        "type": "object",
        "description": "The writable attributes for a Shared Link.",
        "x-box-reference-hide": true,
        "properties": {
          "access": {
            "type": "string",
            "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nThis field defaults to default access level\nspecified by the enterprise admin.",
            "enum": [
              "open",
              "company",
              "collaborators"
            ],
            "example": "open"
          },
          "password": {
            "type": "string",
            "description": "The password required to access the shared link. Set this to\n`null` to remove the password.",
            "example": "do-not-use-this-password"
          },
          "unshared_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-12-12T10:53:43-08:00",
            "description": "The timestamp at which this shared link will\nbe disabled. This field can only be set by\nusers with paid accounts."
          },
          "permissions": {
            "type": "object",
            "properties": {
              "can_download": {
                "type": "boolean",
                "example": true,
                "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`."
              }
            }
          }
        }
      },
      "Skill": {
        "x-box-resource-id": "skill",
        "description": "An object representing a skill",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the skill",
                "example": "Hello World Skill"
              },
              "api_key": {
                "type": "string",
                "description": "The client ID of the application",
                "example": "hxel2s12wd2h9r8ne103c4gjbqefofih"
              }
            }
          }
        ]
      },
      "SkillInvocation": {
        "x-box-resource-id": "skill_invocation",
        "description": "The payload of a Box skill as sent to a Custom Skill's\n`invocation_url`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the invocation request.",
                "example": "fd1d2e53-35f5-41fb-9c25-4ba326daf2f9_341016304"
              },
              "skill": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Skill"
                  },
                  {
                    "description": "The skill that triggered this invocation"
                  }
                ]
              },
              "token": {
                "type": "object",
                "description": "The read-only and read-write access tokens for this item",
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/AccessToken--Mini"
                  },
                  "write": {
                    "$ref": "#/components/schemas/AccessToken--Mini"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "string",
                    "example": "invoked",
                    "description": "The state of this event.\n\n* `invoked` - Triggered the skill with event details to start\n  applying skill on the file.\n* `processing` - Currently processing.\n* `success` - Completed processing with a success.\n* `transient_failure` - Encountered a failure which can be\n  retried.\n* `permanent_failure` -  Encountered a permanent failure and\n  retry would not help.",
                    "enum": [
                      "invoked",
                      "processing",
                      "success",
                      "transient_failure",
                      "permanent_failure"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "example": "Example",
                    "description": "Status information"
                  },
                  "error_code": {
                    "type": "string",
                    "example": "400",
                    "description": "Error code information, if error occurred."
                  },
                  "additional_info": {
                    "type": "string",
                    "example": "Example",
                    "description": "Additional status information."
                  }
                }
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this invocation was created.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trigger": {
                "type": "string",
                "example": "FILE_CONTENT",
                "description": "Action that triggered the invocation"
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise that this invocation was triggered for"
                  }
                ]
              },
              "source": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/File--Standard"
                      },
                      {
                        "$ref": "#/components/schemas/Folder--Standard"
                      }
                    ]
                  },
                  {
                    "description": "The item that caused the invocation to trigger"
                  }
                ]
              },
              "event": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Event"
                  },
                  {
                    "description": "The event that triggered this invocation"
                  }
                ]
              }
            }
          }
        ]
      },
      "StoragePolicy": {
        "x-box-resource-id": "storage_policy",
        "description": "The Storage Policy object describes the storage zone.",
        "allOf": [
          {
            "$ref": "#/components/schemas/StoragePolicy--Mini"
          },
          {
            "properties": {
              "name": {
                "description": "A descriptive name of the region",
                "type": "string",
                "example": "Montreal / Dublin"
              }
            }
          }
        ]
      },
      "StoragePolicy--Mini": {
        "x-box-resource-id": "storage_policy--mini",
        "description": "A mini description of a Storage Policy object",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {}
          }
        ]
      },
      "StoragePolicyAssignment": {
        "x-box-resource-id": "storage_policy_assignment",
        "description": "The assignment of a storage policy to a user or enterprise",
        "properties": {
          "storage_policy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StoragePolicy--Mini"
              },
              {
                "description": "The assigned storage policy"
              }
            ]
          },
          "assigned_to": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              {
                "description": "The enterprise or use the policy is assigned to"
              }
            ]
          }
        }
      },
      "Task": {
        "x-box-resource-id": "task",
        "x-box-reference-category": "tasks",
        "description": "Tasks allow for file-centric workflows in Box. Users can\ncreate tasks on files and assign them to collaborators on\nBox.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file associated with the task"
                  }
                ]
              },
              "due_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the task is due",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "action": {
                "type": "string",
                "example": "review",
                "description": "The action the task assignee will be prompted to\ndo.",
                "enum": [
                  "review"
                ]
              },
              "message": {
                "type": "string",
                "description": "A message that will be included with the task",
                "example": "Legal review"
              },
              "task_assignment_collection": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskAssignments"
                  },
                  {
                    "description": "A collection of task assignment objects\nassociated with the task"
                  }
                ]
              },
              "is_completed": {
                "type": "boolean",
                "description": "Whether the task has been completed",
                "example": true
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the task"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the task object was created",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Tasks": {
        "x-box-resource-id": "tasks",
        "description": "A list of tasks",
        "x-box-reference-category": "tasks",
        "properties": {
          "total_count": {
            "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.",
            "example": 5000,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "TaskAssignment": {
        "x-box-resource-id": "task_assignment",
        "x-box-reference-category": "tasks",
        "description": "An assignment of a task to a file and user",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file the task has been assigned to"
                  }
                ]
              },
              "assigned_to": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user the task has been assigned to"
                  }
                ]
              },
              "message": {
                "type": "string",
                "example": "Please review",
                "description": "A message that will be included with this task\nassignment"
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date at which this task assignment was\ncompleted",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "assigned_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date at which this task assignment was\nassigned",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "reminded_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date at which this task assignment was\nreminded",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "resolution_state": {
                "type": "string",
                "description": "State of this assignment",
                "example": "incomplete",
                "enum": [
                  "completed",
                  "incomplete",
                  "approved",
                  "rejected"
                ]
              },
              "assigned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who assigned this task"
                  }
                ]
              }
            }
          }
        ]
      },
      "TaskAssignments": {
        "x-box-resource-id": "task_assignments",
        "x-box-reference-category": "tasks",
        "type": "object",
        "description": "A list of task assignments",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        ]
      },
      "TermsOfService": {
        "x-box-resource-id": "terms_of_service",
        "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
        "allOf": [
          {
            "$ref": "#/components/schemas/TermsOfService--Mini"
          },
          {
            "properties": {
              "status": {
                "description": "Whether these terms are enabled or not",
                "type": "string",
                "example": "enabled",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise these terms apply to"
                  }
                ]
              },
              "tos_type": {
                "description": "Whether to apply these terms to managed users or external users",
                "type": "string",
                "example": "managed",
                "enum": [
                  "managed",
                  "external"
                ]
              },
              "text": {
                "description": "The text for your terms and conditions. This text could be\nempty if the status is disabled",
                "type": "string",
                "example": "By using this service, you agree to ..."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "TermsOfService--Mini": {
        "x-box-resource-id": "terms_of_service--mini",
        "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {}
          }
        ]
      },
      "TermsOfServiceUserStatus": {
        "x-box-resource-id": "terms_of_service_user_status",
        "description": "The association between a Terms of Service and a user",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "tos": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TermsOfService--Mini"
                  },
                  {
                    "description": "The terms of service"
                  }
                ]
              },
              "user": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user"
                  }
                ]
              },
              "is_accepted": {
                "type": "boolean",
                "example": true,
                "description": "If the user has accepted the terms of services"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "TokenRequest": {
        "x-box-resource-id": "token_request",
        "description": "A request for a new OAuth2 token",
        "required": [
          "grant_type"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "example": "authorization_code",
            "description": "The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, or another access\ntoken for the purpose of downscoping a token.",
            "enum": [
              "authorization_code",
              "refresh_token",
              "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "urn:ietf:params:oauth:grant-type:token-exchange"
            ]
          },
          "client_id": {
            "type": "string",
            "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code` or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
            "example": "ly1nj6n11vionaie65emwzk575hnnmrk"
          },
          "client_secret": {
            "type": "string",
            "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code` or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
            "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
          },
          "code": {
            "type": "string",
            "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`.",
            "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
          },
          "refresh_token": {
            "type": "string",
            "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`.",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
          },
          "assertion": {
            "type": "string",
            "format": "jwt",
            "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`.",
            "example": "xxxxx.yyyyy.zzzzz"
          },
          "subject_token": {
            "type": "string",
            "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
          },
          "subject_token_type": {
            "type": "string",
            "example": "urn:ietf:params:oauth:token-type:access_token",
            "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "enum": [
              "urn:ietf:params:oauth:token-type:access_token"
            ]
          },
          "actor_token": {
            "type": "string",
            "description": "The actor token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
          },
          "actor_token_type": {
            "type": "string",
            "example": "urn:ietf:params:oauth:token-type:id_token",
            "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "enum": [
              "urn:ietf:params:oauth:token-type:id_token"
            ]
          },
          "scope": {
            "type": "string",
            "format": "space_delimited_list",
            "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**.",
            "example": "item_upload item_preview base_explorer"
          },
          "resource": {
            "type": "string",
            "format": "uri",
            "description": "Full URL for the file that the token should be generated for.",
            "example": "https://api.box.com/2.0/files/123456"
          }
        }
      },
      "TokenRevocationRequest": {
        "x-box-resource-id": "token_revocation_request",
        "description": "A request to revoke an OAuth2 token",
        "required": [
          "grant_type"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "description": "The Client ID of the application requesting to revoke the\naccess token.",
            "example": "ly1nj6n11vionaie65emwzk575hnnmrk"
          },
          "client_secret": {
            "type": "string",
            "description": "The client secret of the application requesting to revoke\nan access token.",
            "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
          },
          "token": {
            "type": "string",
            "description": "The access token to revoke.",
            "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
          }
        }
      },
      "UploadUrl": {
        "x-box-resource-id": "upload_url",
        "x-box-reference-category": "files",
        "description": "The details for the upload session for the file.",
        "properties": {
          "upload_url": {
            "type": "string",
            "example": "https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234",
            "description": "A URL for an upload session that can be used to upload\nthe file."
          },
          "upload_token": {
            "type": "string",
            "example": "Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP",
            "description": "An optional access token to use to upload the file"
          }
        }
      },
      "User": {
        "x-box-resource-id": "user",
        "description": "A full representation of a user, as can be returned from any\nuser API endpoint.",
        "x-box-reference-category": "users",
        "allOf": [
          {
            "$ref": "#/components/schemas/User--Standard"
          },
          {
            "properties": {
              "role": {
                "type": "string",
                "enum": [
                  "admin",
                  "coadmin",
                  "user"
                ],
                "description": "The user’s enterprise role",
                "example": "admin"
              },
              "tracking_codes": {
                "type": "array",
                "description": "An array of key/value pairs set by the user’s admin",
                "example": [
                  "code1: 12345"
                ],
                "items": {
                  "type": "string"
                }
              },
              "can_see_managed_users": {
                "type": "boolean",
                "example": true,
                "description": "Whether the user can see other enterprise users in her contact list"
              },
              "is_sync_enabled": {
                "type": "boolean",
                "description": "Whether the user can use Box Sync",
                "example": true
              },
              "is_external_collab_restricted": {
                "type": "boolean",
                "example": true,
                "description": "Whether the user is allowed to collaborate with users outside her\nenterprise"
              },
              "is_exempt_from_device_limits": {
                "type": "boolean",
                "example": true,
                "description": "Whether to exempt the user from Enterprise device limits"
              },
              "is_exempt_from_login_verification": {
                "type": "boolean",
                "example": true,
                "description": "Whether the user must use two-factor authentication"
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "Representation of the user’s enterprise"
                  }
                ]
              },
              "my_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "important"
                ],
                "description": "Tags for all files and folders owned by the user. Values returned\nwill  only contain tags that were set by the requester."
              },
              "hostname": {
                "type": "string",
                "example": "https://example.com/",
                "description": "The root (protocol, subdomain, domain) of any links that need to be\ngenerated for the user"
              },
              "is_platform_access_only": {
                "type": "boolean",
                "example": true,
                "description": "Whether the user is an App User"
              }
            }
          }
        ]
      },
      "Users": {
        "x-box-resource-id": "users",
        "x-box-reference-category": "users",
        "description": "A list of users.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        ]
      },
      "User--Standard": {
        "x-box-resource-id": "user--standard",
        "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/User--Mini"
          },
          {
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the user object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the user object was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "language": {
                "type": "string",
                "format": "ISO639-1-BOX",
                "description": "The user's preferred language",
                "example": "en"
              },
              "timezone": {
                "type": "string",
                "format": "timezone",
                "description": "The user's timezone",
                "example": "Africa/Bujumbura"
              },
              "space_amount": {
                "type": "integer",
                "description": "The user’s total available space amount in bytes",
                "example": 11345156112
              },
              "space_used": {
                "type": "integer",
                "description": "The amount of space in use by the user",
                "example": 1237009912
              },
              "max_upload_size": {
                "type": "integer",
                "description": "The maximum individual file size in bytes the user can have",
                "example": 2147483648
              },
              "status": {
                "type": "string",
                "enum": [
                  "active",
                  "inactive",
                  "cannot_delete_edit",
                  "cannot_delete_edit_upload"
                ],
                "description": "The user's account status",
                "example": "active"
              },
              "job_title": {
                "type": "string",
                "description": "The user’s job title",
                "maxLength": 100,
                "example": "CEO"
              },
              "phone": {
                "type": "string",
                "description": "The user’s phone number",
                "maxLength": 100,
                "example": "6509241374"
              },
              "address": {
                "type": "string",
                "description": "The user’s address",
                "maxLength": 255,
                "example": "900 Jefferson Ave, Redwood City, CA 94063"
              },
              "avatar_url": {
                "type": "string",
                "description": "URL of the user’s avatar image",
                "example": "https://www.box.com/api/avatar/large/181216415"
              }
            }
          }
        ]
      },
      "User--Mini": {
        "x-box-resource-id": "user--mini",
        "description": "A mini representation of a user, used when\nnested under another resource.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the user",
                "example": "Aaron Levie",
                "maxLength": 50
              },
              "login": {
                "type": "string",
                "description": "The email address the user uses to log in",
                "example": "ceo@box.com"
              }
            }
          }
        ]
      },
      "Watermark": {
        "x-box-resource-id": "watermark",
        "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
        "properties": {
          "watermark": {
            "type": "object",
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this watermark was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this task was modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        }
      },
      "WatermarkInfo": {
        "x-box-resource-id": "watermark_info",
        "description": "The watermark information about this item",
        "properties": {
          "is_watermarked": {
            "type": "boolean",
            "description": "Whether the item is watermarked or not.",
            "example": true
          }
        }
      },
      "Webhook": {
        "x-box-resource-id": "webhook",
        "description": "Represents a configured webhook.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "target": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Reference"
                  },
                  {
                    "description": "A reference to the item that will be monitored\nand webhooks created for"
                  }
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the webhook"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "A timestamp identifying the time that\nthe webhook was created.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "address": {
                "type": "string",
                "example": "https://example.com/webhooks",
                "description": "The URL that is notified by this webhook"
              },
              "triggers": {
                "type": "array",
                "example": [
                  "FILE.UPLOADED"
                ],
                "description": "An array of event names that this webhook is\nto be triggered for",
                "items": {
                  "$ref": "#/components/schemas/WebhookTrigger"
                }
              }
            }
          }
        ]
      },
      "WebhookEvent": {
        "x-box-resource-id": "webhook_event",
        "description": "The event that is sent to a webhook address when an event happens",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "webhook": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  {
                    "description": "The webhook object that triggered this event"
                  }
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user that triggered this event"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "A timestamp identifying the time that\nthe webhook event was triggered.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trigger": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebhookTrigger"
                  },
                  {
                    "description": "The event name that triggered this webhook"
                  }
                ]
              },
              "source": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/File--Standard"
                      },
                      {
                        "$ref": "#/components/schemas/Folder--Standard"
                      }
                    ]
                  },
                  {
                    "description": "The item that caused the event to trigger"
                  }
                ]
              }
            }
          }
        ]
      },
      "WebhookTrigger": {
        "x-box-resource-id": "webhook_trigger",
        "example": "FILE.UPLOADED",
        "type": "string",
        "description": "The event name that triggered this webhook",
        "enum": [
          "FILE.UPLOADED",
          "FILE.PREVIEWED",
          "FILE.DOWNLOADED",
          "FILE.TRASHED",
          "FILE.DELETED",
          "FILE.RESTORED",
          "FILE.COPIED",
          "FILE.MOVED",
          "FILE.LOCKED",
          "FILE.UNLOCKED",
          "FILE.RENAMED",
          "COMMENT.CREATED",
          "COMMENT.UPDATED",
          "COMMENT.DELETED",
          "TASK_ASSIGNMENT.CREATED",
          "TASK_ASSIGNMENT.UPDATED",
          "METADATA_INSTANCE.CREATED",
          "METADATA_INSTANCE.UPDATED",
          "METADATA_INSTANCE.DELETED",
          "FOLDER.CREATED",
          "FOLDER.RENAMED",
          "FOLDER.DOWNLOADED",
          "FOLDER.RESTORED",
          "FOLDER.DELETED",
          "FOLDER.COPIED",
          "FOLDER.MOVED",
          "FOLDER.TRASHED",
          "WEBHOOK.DELETED",
          "COLLABORATION.CREATED",
          "COLLABORATION.ACCEPTED",
          "COLLABORATION.REJECTED",
          "COLLABORATION.REMOVED",
          "COLLABORATION.UPDATED",
          "SHARED_LINK.DELETED",
          "SHARED_LINK.CREATED",
          "SHARED_LINK.UPDATED"
        ]
      },
      "WebLink": {
        "x-box-resource-id": "web_link",
        "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
        "x-box-reference-category": "web_links",
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "properties": {
              "parent": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "description": "The parent object the web link belongs to"
                  }
                ]
              },
              "url": {
                "type": "string",
                "example": "https://www.example.com/example/1234",
                "description": "The URL this web link points to"
              },
              "description": {
                "type": "string",
                "example": "Example page",
                "description": "The description accompanying the web link. This is\nvisible within the Box web application."
              },
              "path_collection": {
                "type": "array",
                "description": "The path of folders to this link, starting at the root",
                "items": {
                  "$ref": "#/components/schemas/Folder--Mini"
                }
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was created on Box’s servers.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was last updated on the Box\nservers.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trashed_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file was last moved to the trash.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "purged_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file will be permanently deleted.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created this web link"
                  }
                ]
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last modified this web link"
                  }
                ]
              },
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who owns this web link"
                  }
                ]
              },
              "shared_link": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SharedLink"
                  },
                  {
                    "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                  }
                ]
              },
              "item_status": {
                "type": "string",
                "example": "active",
                "enum": [
                  "active",
                  "trashed",
                  "deleted"
                ],
                "description": "Whether this item is deleted or not. Values include `active`,\n`trashed` if the file has been moved to the trash, and `deleted` if\nthe file has been permanently deleted"
              }
            }
          }
        ]
      }
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "tags": [
    {
      "name": "Authorization",
      "x-box-reference-category": "authorization"
    },
    {
      "name": "Files",
      "x-box-reference-category": "files"
    },
    {
      "name": "File Versions",
      "x-box-reference-category": "file_versions"
    },
    {
      "name": "Folders",
      "x-box-reference-category": "folders"
    },
    {
      "name": "File & Folder Metadata",
      "x-box-reference-category": "metadata"
    },
    {
      "name": "Metadata Templates",
      "x-box-reference-category": "metadata_templates"
    },
    {
      "name": "Search",
      "x-box-reference-category": "search"
    },
    {
      "name": "Trash",
      "x-box-reference-category": "trash"
    },
    {
      "name": "Collaborations",
      "x-box-reference-category": "collaborations"
    },
    {
      "name": "Comments",
      "x-box-reference-category": "comments"
    },
    {
      "name": "Tasks",
      "x-box-reference-category": "tasks"
    },
    {
      "name": "Web Links",
      "x-box-reference-category": "web_links"
    },
    {
      "name": "Users",
      "x-box-reference-category": "users"
    },
    {
      "name": "Groups",
      "x-box-reference-category": "groups"
    }
  ]
}